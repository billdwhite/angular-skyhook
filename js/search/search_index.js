var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/interfaces/AddSubscription.html",[0,0.706,1,2.321]],["body/interfaces/AddSubscription.html",[1,3.717,2,0.8,3,0.8,4,0.548,5,3.473,6,0.87,7,3.473,8,2.816,9,2.166,10,3.969,11,2.808,12,3.473,13,4.721,14,4.755,15,4.721,16,3.285,17,1.855,18,1.855,19,0.669,20,1.13,21,4.721,22,5.09,23,2.166,24,4.721,25,1.721,26,0.027,27,1.485,28,0.437,29,1.485,30,1.103,31,0.02,32,0.024,33,0.02]],["title/interfaces/BackendFactoryInput.html",[0,0.706,34,2.321]],["body/interfaces/BackendFactoryInput.html",[2,0.734,3,0.734,4,0.503,6,0.798,12,3.188,19,0.614,26,0.029,28,0.401,31,0.018,32,0.023,33,0.018,34,2.849,35,2.849,36,0.826,37,3.643,38,2.849,39,1.58,40,4.334,41,2.849,42,2.158,43,3.643,44,2.577,45,5.369,46,1.363,47,2.849,48,1.176,49,4.513,50,4.61,51,4.513,52,3.188,53,2.849,54,2.126,55,5.369,56,1.838,57,4.334,58,2.158,59,3.188,60,3.643,61,2.277,62,1.267,63,2.577]],["title/interfaces/BackendInput.html",[0,0.706,64,2.321]],["body/interfaces/BackendInput.html",[2,0.833,3,0.833,4,0.571,6,0.906,19,0.697,26,0.026,28,0.455,31,0.021,32,0.025,33,0.021,35,3.234,36,0.697,37,4.136,38,3.234,42,2.45,48,1.727,50,4.264,61,2.458,64,3.234,65,2.458,66,1.933,67,4.136]],["title/interfaces/ConnectionBase.html",[0,0.706,68,1.758]],["body/interfaces/ConnectionBase.html",[2,0.532,3,0.532,4,0.364,6,0.578,8,2.163,9,1.993,14,2.638,16,2.357,17,1.233,18,1.233,19,0.444,20,0.995,22,3.651,23,1.44,25,1.816,26,0.029,27,1.366,28,0.498,29,1.366,30,1.164,31,0.013,32,0.018,33,0.013,36,0.444,54,2.058,56,1.331,66,1.233,68,1.563,69,1.866,70,1.866,71,3.138,72,2.063,73,0.852,74,1.816,75,1.584,76,2.917,77,3.138,78,3.138,79,1.703,80,2.638,81,3.138,82,1.144,83,2.638,84,3.138,85,1.44,86,2.163,87,2.638,88,2.703,89,2.583,90,1.866,91,2.309,92,3.138,93,1.866,94,3.138,95,3.138,96,1.866,97,2.855,98,3.138,99,1.44,100,1.993,101,3.138,102,1.233,103,2.638,104,4.344,105,3.138,106,1.269,107,3.138,108,3.138,109,3.138,110,2.357,111,2.638,112,1.703,113,2.638,114,1.703,115,3.138,116,3.138,117,3.138,118,2.638,119,3.138,120,2.163,121,2.638,122,3.138,123,1.707,124,3.138,125,0.578,126,1.144,127,1.707,128,2.638,129,1.703,130,3.138,131,2.638,132,1.96,133,2.638,134,3.138,135,2.309,136,2.063,137,2.638,138,3.138,139,2.309,140,3.138,141,3.138,142,3.138,143,1.563,144,2.063,145,3.138,146,3.138,147,1.331,148,2.063,149,1.44,150,2.309,151,3.138,152,2.163,153,2.063,154,2.063,155,3.138,156,2.063,157,3.138,158,2.638,159,3.138,160,0.917,161,2.638,162,3.138,163,3.196,164,3.138,165,1.331,166,1.866,167,3.138,168,1.44,169,1.331,170,1.703,171,2.638,172,2.309,173,2.638,174,1.703,175,1.44,176,3.138,177,1.563,178,3.138,179,1.44,180,2.638,181,3.138,182,2.309,183,2.063,184,1.703,185,1.703,186,3.138,187,3.138]],["title/interfaces/DragLayer.html",[0,0.706,188,1.916]],["body/interfaces/DragLayer.html",[2,0.461,3,0.461,4,0.316,6,0.501,18,1.069,19,0.385,20,0.785,25,1.432,26,0.027,27,0.856,28,0.532,29,0.856,30,0.636,31,0.012,32,0.017,33,0.012,36,0.714,46,0.856,47,1.789,48,1.452,54,1.432,62,1.347,63,1.618,66,1.543,68,1.955,69,1.618,70,1.618,75,1.95,76,1.476,86,1.355,106,1.148,118,2.288,120,1.355,121,2.288,125,1.211,126,2.032,127,1.811,129,1.476,132,1.68,135,2.002,136,2.581,149,1.249,160,0.795,168,1.249,170,1.476,173,2.288,174,1.476,175,1.802,177,1.355,185,1.476,188,2.131,189,1.476,190,2.889,191,0.992,192,3.873,193,1.802,194,2.721,195,2.75,196,2.721,197,2.002,198,2.721,199,1.618,200,1.789,201,1.789,202,1.249,203,2.721,204,2.721,205,3.301,206,3.516,207,2.721,208,2.288,209,2.288,210,1.95,211,2.002,212,1.789,213,5.179,214,2.002,215,3.927,216,4.1,217,2.721,218,1.355,219,1.802,220,2.335,221,1.476,222,2.131,223,3.029,224,2.721,225,1.789,226,0.636,227,2.721,228,2.721,229,2.721,230,2.721,231,1.789,232,2.721,233,2.002,234,1.154,235,2.721,236,1.249,237,1.618,238,2.721,239,1.154,240,2.74,241,1.249,242,2.002,243,1.249,244,1.954,245,1.789,246,0.921,247,1.789,248,2.002,249,1.618,250,2.889,251,1.789,252,1.954,253,2.288,254,2.721,255,2.288,256,2.002,257,2.002,258,2.721,259,1.069,260,1.618,261,1.154,262,2.002,263,2.721,264,2.288,265,2.721,266,2.721,267,3.927,268,2.721,269,1.347,270,2.721,271,2.288,272,2.335,273,2.721,274,1.618,275,2.288,276,2.002,277,1.355,278,2.721,279,2.002,280,2.721,281,2.288,282,1.618,283,2.721,284,1.476,285,1.069,286,1.789,287,2.721,288,2.002,289,2.721,290,2.721,291,2.581,292,1.618,293,1.618,294,1.618,295,2.002,296,1.789,297,2.288,298,2.288,299,2.721,300,2.721,301,2.721,302,2.721,303,3.301,304,1.789,305,2.288,306,1.249,307,2.721]],["title/interfaces/DragLayerMonitor.html",[0,0.706,240,2.1]],["body/interfaces/DragLayerMonitor.html",[2,0.826,3,0.826,4,0.566,6,0.898,18,1.916,19,0.69,20,1.152,26,0.026,30,1.139,31,0.021,32,0.024,33,0.021,58,2.428,106,1.425,125,0.898,152,3.056,188,2.645,239,2.068,240,2.899,308,4.099,309,3.205,310,2.068,311,2.428,312,1.916,313,2.428,314,3.587,315,3.205,316,2.645]],["title/directives/DragPreviewDirective.html",[317,1.758,318,2.321]],["body/directives/DragPreviewDirective.html",[3,0.793,4,0.544,6,0.862,19,0.663,26,0.027,28,0.521,31,0.02,32,0.024,33,0.02,48,1.271,125,1.037,193,2.582,195,2.582,200,3.076,210,1.706,226,1.093,246,1.905,318,3.076,319,2.148,320,3.076,321,1.985,322,2.783,323,1.898,324,2.783,325,3.443,326,3.076,327,6.033,328,3.346,329,3.273,330,2.148,331,2.54,332,1.585]],["title/interfaces/DragPreviewOptions.html",[0,0.706,329,1.916]],["body/interfaces/DragPreviewOptions.html",[2,0.527,3,0.527,4,0.362,6,0.574,19,0.441,26,0.025,28,0.521,29,1.969,31,0.013,32,0.018,33,0.013,39,1.135,58,2.151,61,1.833,62,0.91,86,1.551,90,1.852,125,1.153,153,2.047,160,1.263,169,1.833,179,1.983,190,2.291,191,2.123,195,2.873,199,2.569,200,2.047,206,2.047,218,2.151,219,1.429,226,1.009,236,1.429,243,1.983,244,1.833,246,1.814,264,2.618,269,0.91,312,1.949,316,2.344,323,0.98,329,1.69,331,1.69,333,2.291,334,5.358,335,5.358,336,4.171,337,5.358,338,5.358,339,3.117,340,3.522,341,3.942,342,2.668,343,4.505,344,5.358,345,3.16,346,3.179,347,4.321,348,3.115,349,4.321,350,4.321,351,4.394,352,4.505,353,2.618,354,4.321,355,4.321,356,3.115,357,4.171,358,2.291,359,2.291,360,3.115,361,2.291,362,2.291,363,1.429,364,1.852,365,3.115,366,3.115,367,3.115,368,1.551,369,2.618,370,4.321,371,3.115,372,2.618,373,3.115,374,3.115,375,3.115,376,3.115,377,1.429,378,3.115,379,1.852,380,2.291,381,4.321,382,3.115,383,1.69,384,3.115,385,3.115,386,1.69,387,2.047,388,2.84,389,2.344,390,3.632]],["title/interfaces/DragSource.html",[0,0.706,323,1.111]],["body/interfaces/DragSource.html",[2,0.488,3,0.488,4,0.335,6,0.531,9,2.51,17,1.133,18,1.133,19,0.408,20,0.951,25,1.735,26,0.029,27,1.629,28,0.577,29,1.497,30,1.278,31,0.012,32,0.017,33,0.012,36,0.674,39,1.735,48,0.783,54,1.493,66,1.133,68,1.436,69,1.715,70,1.715,73,1.406,74,1.493,82,1.051,87,2.425,99,1.323,102,1.133,112,2.221,114,1.565,120,1.436,125,0.877,126,1.051,132,1.051,160,0.843,195,1.323,199,3.38,201,2.691,218,2.038,226,1.112,234,1.737,246,1.386,252,1.223,269,0.843,272,3.081,274,1.715,277,1.436,282,1.715,284,1.565,285,1.87,319,1.879,321,2.019,323,1.788,329,2.221,331,2.811,339,1.436,368,2.038,377,2.184,391,1.223,392,2.122,393,1.715,394,2.425,395,2.425,396,2.122,397,2.37,398,2.425,399,1.715,400,3.442,401,3.442,402,4.001,403,4.001,404,2.884,405,2.691,406,2.184,407,2.435,408,3.012,409,2.435,410,2.884,411,1.715,412,2.122,413,2.122,414,2.884,415,2.122,416,3.442,417,3.442,418,2.691,419,3.442,420,3.442,421,3.012,422,2.884,423,2.435,424,2.425,425,0.843,426,2.425,427,2.884,428,2.197,429,2.038,430,3.442,431,2.425,432,1.896,433,1.896,434,1.715,435,2.122,436,1.223,437,1.133,438,2.435,439,2.425,440,1.896,441,2.122,442,2.122,443,3.442,444,2.884,445,2.884,446,0.727,447,4.094,448,1.715,449,2.884,450,2.884,451,2.884,452,2.884,453,2.884,454,2.884,455,2.884,456,2.884,457,2.884,458,2.884,459,2.884,460,1.565]],["title/directives/DragSourceDirective.html",[317,1.758,461,2.321]],["body/directives/DragSourceDirective.html",[3,0.728,4,0.499,6,0.792,19,0.609,26,0.028,28,0.563,31,0.018,32,0.023,33,0.018,36,0.757,46,1.352,48,1.167,58,2.141,73,1.167,74,1.568,110,2.333,165,1.824,191,1.568,193,2.451,195,1.973,210,1.568,211,3.163,219,1.973,226,1.004,246,1.456,269,1.257,312,1.69,319,1.973,320,2.826,321,1.824,323,2.032,325,3.163,326,2.826,328,3.177,330,1.973,331,2.333,332,1.456,336,3.615,387,2.826,389,2.333,397,2.66,423,3.456,428,1.824,429,2.141,461,2.826,462,5.342,463,5.342,464,3.615,465,3.615,466,3.615,467,4.3,468,4.3,469,4.3]],["title/interfaces/DragSourceMonitor.html",[0,0.706,470,2.1]],["body/interfaces/DragSourceMonitor.html",[2,0.59,3,0.59,4,0.405,6,0.642,17,1.37,18,1.37,19,0.494,20,1.051,26,0.027,30,1.535,31,0.025,32,0.02,33,0.015,36,0.494,56,1.979,58,2.323,65,1.478,75,1.271,79,1.891,106,1.019,125,0.969,152,2.796,165,1.478,169,1.478,175,2.141,226,0.814,239,1.478,241,1.599,279,2.564,284,1.891,295,2.564,309,2.291,310,1.478,311,1.736,312,2.367,313,2.323,314,3.432,315,2.291,316,2.853,322,2.073,332,1.579,359,2.564,363,1.599,377,1.599,386,1.891,409,2.774,425,1.886,432,2.291,437,1.37,446,1.325,448,2.073,470,2.073,471,2.93,472,3.486,473,4.526,474,4.721,475,4.421,476,2.93,477,2.774,478,1.599,479,3.486,480,2.93,481,1.736,482,3.486,483,3.486,484,2.93,485,2.564,486,2.073,487,3.486,488,2.93,489,2.93,490,2.564,491,3.127,492,2.564,493,2.774,494,2.93,495,2.564,496,2.93,497,1.833,498,2.93,499,2.93,500,2.93,501,2.93,502,2.564,503,1.891,504,2.93,505,2.93,506,3.066,507,2.073,508,2.564,509,2.93]],["title/interfaces/DragSourceOptions.html",[0,0.706,423,2.1]],["body/interfaces/DragSourceOptions.html",[2,0.744,3,0.744,4,0.51,6,0.809,19,0.622,26,0.028,28,0.407,29,1.703,31,0.019,32,0.023,33,0.019,36,0.622,48,1.192,61,2.296,62,1.284,86,2.695,160,1.284,191,1.601,214,3.231,241,2.015,244,1.863,276,3.231,292,2.612,323,1.703,333,3.231,387,2.887,388,3.558,423,2.612,428,1.863,510,4.392,511,2.383,512,4.932,513,3.857,514,4.134,515,4.55,516,4.55,517,4.392,518,2.887,519,4.392,520,3.692,521,4.392,522,4.392,523,4.392,524,4.392,525,3.692,526,4.392,527,4.392]],["title/interfaces/DragSourceSpec.html",[0,0.706,437,1.388]],["body/interfaces/DragSourceSpec.html",[0,0.85,2,0.402,3,0.402,4,0.275,6,0.437,17,1.394,18,0.932,19,0.336,20,0.709,25,1.843,26,0.029,27,1.485,28,0.545,29,1.905,30,1.181,31,0.015,32,0.018,33,0.01,36,0.336,39,0.864,46,0.746,48,0.644,56,2.144,59,1.744,61,1.006,65,1.505,66,0.932,72,1.558,82,0.864,88,1.286,89,1.41,100,1.088,106,1.607,110,1.286,112,1.286,120,1.18,125,0.87,127,0.932,132,0.864,139,1.744,143,1.18,152,1.767,160,1.037,168,2.166,175,1.088,183,1.558,189,1.286,191,1.55,197,1.744,202,1.628,223,2.332,226,1.239,231,1.558,239,1.505,241,1.088,242,1.744,243,1.088,244,1.804,252,1.505,259,0.932,269,1.653,282,3.155,285,0.932,286,1.558,296,1.558,306,1.628,310,1.505,312,0.932,313,1.18,316,1.925,330,1.088,332,1.201,339,1.767,361,1.744,362,1.744,363,1.088,379,1.41,383,1.286,393,1.41,396,1.744,406,1.088,411,1.41,425,1.477,428,1.006,437,0.932,441,1.744,446,0.894,448,1.41,460,2.743,470,3.555,473,2.611,478,2.166,481,1.18,491,2.808,493,1.41,497,1.394,507,2.11,509,1.993,512,1.993,513,2.332,514,1.558,525,1.993,528,1.993,529,1.744,530,1.744,531,1.286,532,1.41,533,1.558,534,1.993,535,1.744,536,2.371,537,2.371,538,2.371,539,2.371,540,1.993,541,1.744,542,1.744,543,2.371,544,2.983,545,4.253,546,2.371,547,3.549,548,3.549,549,1.993,550,1.558,551,1.744,552,2.371,553,3.549,554,2.371,555,1.993,556,2.371,557,2.371,558,2.371,559,2.371,560,2.371,561,1.993,562,1.558,563,2.371,564,1.993,565,1.993,566,2.371,567,2.332,568,1.993,569,2.371,570,1.744,571,2.371,572,1.993,573,1.993,574,1.993,575,2.371,576,1.993,577,2.371,578,1.286,579,2.11,580,2.371,581,2.371,582,1.744,583,1.993,584,2.371,585,2.371,586,2.371,587,1.558,588,1.993,589,2.371,590,1.41,591,2.371,592,2.371,593,2.371,594,2.371,595,2.371,596,1.286,597,3.549,598,1.744,599,2.371,600,1.993,601,2.371,602,1.993,603,2.371,604,1.744,605,2.371,606,1.993,607,2.371,608,2.611,609,2.371,610,1.558,611,1.744,612,2.332,613,1.993,614,1.744,615,1.286,616,1.088,617,1.993,618,1.993,619,1.993,620,1.744,621,1.993]],["title/interfaces/DropTarget.html",[0,0.706,391,1.498]],["body/interfaces/DropTarget.html",[2,0.638,3,0.638,4,0.437,6,0.694,7,2.771,9,2.507,17,1.48,18,1.48,19,0.533,20,0.981,25,1.79,26,0.027,27,1.544,28,0.58,29,1.544,30,1.352,31,0.016,32,0.021,33,0.016,36,0.533,39,1.79,48,1.022,54,1.373,62,1.101,66,1.48,68,1.875,69,2.24,70,2.24,73,1.483,74,1.373,75,1.373,82,1.373,85,1.728,112,2.043,114,2.043,120,1.875,125,0.694,126,1.373,132,1.79,199,3.249,218,1.875,234,1.597,246,1.662,274,2.24,282,2.24,285,1.48,319,1.728,321,2.083,323,1.544,368,1.875,377,2.507,391,2.317,397,2.445,399,2.24,402,4.593,405,2.475,406,1.728,407,2.24,408,2.771,409,2.24,416,3.166,417,3.166,418,2.475,419,3.166,420,3.166,424,3.166,425,1.597,426,3.166,430,4.128,431,3.166,432,2.475,433,2.475,434,2.24,435,2.771,436,1.597,438,2.24,440,2.475,446,1.376,481,1.875,596,2.043,616,1.728,622,2.043,623,4.91,624,4.91,625,3.766,626,3.766,627,3.227]],["title/directives/DropTargetDirective.html",[317,1.758,628,2.598]],["body/directives/DropTargetDirective.html",[3,0.73,4,0.501,6,0.794,11,3.182,19,0.61,25,1.572,26,0.027,27,1.356,28,0.539,29,1.356,30,1.007,31,0.018,32,0.023,33,0.018,36,0.61,46,1.356,73,1.17,74,1.572,110,2.339,120,2.147,165,1.829,211,3.172,246,1.46,257,3.937,269,1.26,319,1.978,320,2.834,321,1.829,325,3.172,326,2.834,328,3.182,391,2.705,397,2.664,446,1.086,464,3.624,465,3.624,466,3.624,627,2.834,628,3.172,629,6.085,630,6.085,631,5.351,632,5.351,633,5.351,634,4.498,635,5.351,636,5.351,637,4.311,638,4.311]],["title/interfaces/DropTargetMonitor.html",[0,0.706,639,2.1]],["body/interfaces/DropTargetMonitor.html",[2,0.594,3,0.594,4,0.407,6,0.646,17,1.378,18,1.378,19,0.497,20,1.054,25,1.279,26,0.027,27,1.103,28,0.488,29,1.103,30,1.528,31,0.025,32,0.02,33,0.015,36,0.497,56,1.488,58,2.333,65,1.488,75,1.279,106,1.025,125,0.863,154,3.08,156,3.7,169,1.488,175,2.15,239,1.488,241,2.15,243,1.61,259,1.378,284,1.903,309,2.306,310,1.488,311,1.747,312,2.372,313,2.333,314,3.447,315,2.306,316,2.862,322,2.086,330,1.61,331,1.903,332,1.586,359,2.581,368,1.747,377,1.61,409,2.786,421,2.581,425,1.922,432,2.306,446,1.418,448,2.086,474,4.733,475,4.435,476,2.949,477,2.086,490,2.581,492,2.581,493,2.786,494,2.949,495,2.581,496,2.949,497,1.841,498,3.939,499,2.949,500,2.949,501,2.949,502,3.881,503,1.903,504,2.949,505,2.949,506,2.306,507,2.086,508,3.447,590,2.086,639,2.086,640,2.949,641,3.508,642,3.508,643,4.685,644,3.508,645,2.949,646,2.581,647,3.508,648,2.949,649,2.949,650,3.508]],["title/interfaces/DropTargetSpec.html",[0,0.706,85,1.621]],["body/interfaces/DropTargetSpec.html",[2,0.556,3,0.556,4,0.381,6,0.605,17,2.153,19,0.465,20,0.895,25,2.091,26,0.027,27,1.604,28,0.531,29,1.967,30,1.28,31,0.019,32,0.019,33,0.014,36,0.465,46,1.033,56,1.9,58,1.635,62,0.959,65,1.9,72,2.158,79,1.781,82,1.197,85,1.506,88,1.781,89,2.664,93,1.952,100,1.506,106,1.491,110,1.781,120,2.231,125,0.605,127,1.29,143,1.635,156,3.352,158,2.76,160,0.959,168,1.506,175,2.34,183,2.158,191,1.197,202,2.056,205,2.76,222,1.781,226,1.046,239,1.393,241,2.056,251,2.158,252,2.324,259,1.29,269,1.491,292,1.952,306,1.506,310,1.393,312,1.29,315,2.158,316,1.781,324,1.952,332,1.517,361,2.415,368,1.635,409,1.952,425,1.771,437,1.76,446,1.491,477,1.952,478,2.056,491,1.952,492,2.415,493,1.952,497,1.29,502,3.296,507,1.952,508,2.415,529,2.415,530,2.415,531,1.781,532,2.664,533,2.158,562,3.352,579,1.952,582,2.415,583,2.76,588,3.766,611,2.415,612,2.945,613,2.76,614,2.415,615,1.781,616,2.056,617,2.76,618,2.76,619,2.76,620,2.415,621,2.76,639,3.667,651,2.76,652,3.283,653,2.76,654,3.283,655,3.283,656,2.158,657,2.76,658,2.76,659,3.283,660,3.283,661,3.283,662,3.283,663,3.283,664,3.283,665,2.76,666,3.283,667,3.283,668,2.76]],["title/interfaces/MonitorBase.html",[0,0.706,311,1.758]],["body/interfaces/MonitorBase.html",[2,0.593,3,0.593,4,0.407,6,0.645,19,0.496,20,1.053,26,0.028,28,0.324,30,1.536,31,0.015,32,0.02,33,0.015,41,2.301,73,1.27,106,1.023,112,1.899,125,0.862,169,2.789,222,2.538,226,0.818,243,2.826,244,2.688,245,2.301,246,1.584,249,2.782,250,4.313,252,2.739,311,1.743,313,1.743,345,3.181,346,4.138,428,1.485,429,1.743,437,1.375,669,2.943,670,2.943,671,2.301,672,2.301,673,5.27,674,5.27,675,5.27,676,5.27,677,5.27,678,5.27,679,5.27,680,5.862,681,4.729,682,3.501,683,4.679,684,4.43,685,3.501,686,4.679,687,3.501,688,2.943]],["title/interfaces/Offset.html",[0,0.706,345,1.916]],["body/interfaces/Offset.html",[2,0.814,3,0.814,4,0.558,6,0.885,19,0.68,26,0.027,28,0.565,31,0.02,32,0.024,33,0.02,61,2.424,65,2.038,298,5.128,339,3.144,345,2.607,689,3.534,690,3.534,691,4.804,692,4.804,693,5.307,694,5.307]],["title/modules/SkyhookDndModule.html",[42,1.758,695,2.321]],["body/modules/SkyhookDndModule.html",[3,0.826,4,0.566,20,0.974,25,1.777,26,0.028,27,1.534,28,0.451,29,1.534,30,1.139,31,0.021,32,0.024,33,0.021,34,3.789,35,3.205,42,2.428,64,3.789,696,3.205,697,4.099,698,5.16,699,4.099,700,4.099,701,4.876,702,4.876,703,4.876]],["title/injectables/SkyhookDndService.html",[82,1.288,704,2.321]],["body/injectables/SkyhookDndService.html",[1,3.735,3,0.488,4,0.335,5,2.122,6,0.754,7,2.122,8,2.37,9,2.827,17,1.609,19,0.408,20,0.818,23,1.323,25,2.072,26,0.028,27,1.497,28,0.588,29,1.497,30,1.112,31,0.012,32,0.017,33,0.012,36,0.408,44,1.715,46,0.907,73,0.783,74,1.051,76,1.565,82,1.051,85,1.879,88,1.565,93,1.715,97,2.691,99,1.879,100,2.51,102,1.133,125,0.954,147,2.019,160,1.196,163,3.012,165,1.223,169,2.411,175,1.879,177,2.038,184,1.565,185,1.565,188,2.811,210,1.051,223,1.896,226,0.956,231,1.896,234,1.223,241,1.323,246,1.386,252,2.197,256,2.122,269,1.196,317,1.436,323,1.839,330,1.879,332,1.386,342,1.436,377,1.323,391,2.197,406,2.184,421,3.501,425,1.196,428,1.737,429,2.038,433,2.691,434,1.715,436,1.223,437,1.87,440,2.691,446,1.031,486,1.715,497,1.133,503,2.221,507,2.435,511,2.221,542,2.122,555,2.425,578,1.565,579,1.715,582,3.012,622,1.565,627,2.691,671,1.896,705,2.884,706,2.425,707,2.122,708,2.884,709,2.425,710,2.884,711,2.884,712,2.425,713,2.884,714,3.012,715,2.884,716,2.884,717,2.884,718,1.715,719,2.884,720,2.884,721,2.884,722,2.884,723,2.884,724,2.884,725,2.884,726,5.683,727,2.884,728,2.425,729,2.884,730,2.884,731,2.884,732,2.425,733,2.122,734,2.425,735,2.425,736,2.884,737,2.884,738,2.884,739,2.884,740,2.884,741,4.094,742,3.442,743,3.442,744,2.884,745,2.884,746,2.884]],["title/changelog.html",[245,1.976,747,2.528,748,3.007]],["body/changelog.html",[4,0.506,11,2.591,26,0.023,31,0.018,32,0.023,33,0.018,46,1.694,48,1.183,62,1.273,123,1.712,127,1.712,193,1.999,202,1.999,248,3.205,363,1.999,478,1.999,718,3.203,749,4.357,750,4.357,751,4.357,752,3.663,753,4.357,754,3.663,755,3.663,756,4.357,757,4.357,758,4.357,759,4.357,760,4.357,761,4.357,762,3.962,763,4.357,764,5.847,765,5.847,766,4.357,767,4.915,768,5.847,769,4.357,770,2.864,771,3.205,772,4.357,773,4.357,774,5.386,775,5.386,776,4.357,777,4.357,778,3.205,779,3.663,780,4.357,781,4.357,782,3.663,783,4.357,784,3.663,785,4.357,786,4.357,787,4.357,788,2.364,789,3.663,790,4.357]],["title/coverage.html",[791,3.956]],["body/coverage.html",[0,1.325,1,2.301,4,0.407,5,3.442,26,0.029,28,0.324,31,0.015,32,0.02,33,0.015,34,2.301,35,3.075,64,2.301,68,1.743,69,3.345,70,3.345,82,1.276,85,1.606,102,1.375,166,3.134,188,1.899,226,0.818,240,2.082,308,2.943,309,3.464,311,1.743,317,2.624,318,2.301,320,3.464,323,1.101,329,1.899,333,3.442,345,1.899,391,1.485,423,2.082,437,1.375,446,0.882,461,2.301,470,2.082,471,2.943,528,2.943,529,3.442,628,2.575,639,2.082,640,2.943,651,2.943,669,2.943,670,2.943,689,2.575,690,2.575,704,2.301,791,2.943,792,2.301,793,3.501,794,3.501,795,5.678,796,5.862,797,6.032,798,5.862,799,3.501,800,4.679,801,3.501,802,4.43,803,2.943,804,5.27,805,2.943,806,2.943,807,3.501,808,3.501]],["title/dependencies.html",[762,2.212,771,3.102]],["body/dependencies.html",[8,2.479,26,0.029,31,0.021,32,0.025,33,0.021,123,1.957,770,3.273,771,4.294,809,4.979,810,4.979,811,4.979,812,4.979,813,4.186,814,5.837,815,4.979,816,4.979]],["title/index.html",[19,0.426,245,1.976,747,2.528]],["body/index.html",[2,0.41,4,0.281,16,1.313,26,0.015,31,0.01,32,0.015,33,0.01,36,0.61,38,2.368,39,1.314,46,1.967,47,1.591,48,1.295,62,0.707,66,0.951,73,0.657,86,1.205,89,1.439,110,1.955,123,2.438,125,0.879,129,1.313,132,0.882,136,1.591,143,1.205,147,2.58,148,1.591,149,2.189,160,0.707,165,1.528,168,2.189,174,1.313,179,1.11,184,1.313,189,2.336,190,1.78,193,1.975,202,1.975,208,2.034,210,1.314,212,1.591,221,1.313,223,2.368,231,1.591,233,1.78,236,1.653,247,1.591,248,2.651,259,1.416,260,2.56,269,0.707,277,1.205,285,1.416,286,1.591,293,1.439,313,1.205,340,1.591,352,2.034,358,1.78,362,1.78,363,1.11,379,1.439,380,1.78,386,1.955,394,2.034,418,1.591,425,1.394,436,1.026,446,0.61,478,1.11,481,1.794,486,2.143,493,1.439,511,1.955,531,1.313,535,1.78,540,2.034,541,1.78,549,2.034,550,1.591,551,1.78,565,2.034,590,2.143,596,1.313,602,3.029,604,1.78,610,1.591,611,2.651,612,1.591,616,1.653,620,1.78,648,2.034,656,1.591,665,2.034,668,2.034,672,1.591,707,1.78,718,1.439,734,2.034,762,1.78,767,2.034,770,2.83,779,2.034,784,2.034,788,2.901,792,2.368,817,2.42,818,3.619,819,3.603,820,2.42,821,2.42,822,2.42,823,2.42,824,3.509,825,2.034,826,2.034,827,2.42,828,1.78,829,2.368,830,2.42,831,2.42,832,2.42,833,2.42,834,1.78,835,2.42,836,2.42,837,2.034,838,2.42,839,2.42,840,2.42,841,2.42,842,2.42,843,2.034,844,2.034,845,2.42,846,1.78,847,2.42,848,2.42,849,2.42,850,2.034,851,2.42,852,2.42,853,2.42,854,2.42,855,1.439,856,2.42,857,2.42,858,2.42,859,2.034,860,2.42,861,2.034,862,1.78,863,2.42,864,2.42,865,2.034,866,2.42,867,2.42,868,3.603,869,2.42,870,1.78,871,2.42,872,2.42,873,2.034,874,2.651,875,2.42,876,3.029,877,2.42,878,2.42,879,2.034,880,2.42,881,2.42,882,1.78,883,2.42,884,2.034,885,2.034,886,2.42,887,2.42,888,2.42,889,2.42,890,2.42,891,2.42,892,2.034,893,2.42,894,2.42,895,1.78,896,2.42,897,2.42,898,2.42,899,2.034,900,2.034,901,2.42,902,2.42,903,2.42,904,2.42,905,2.42,906,2.42,907,2.42,908,2.42,909,2.42,910,2.034,911,2.42,912,2.42,913,2.42,914,2.42,915,2.42,916,2.42,917,2.42,918,2.42,919,2.42,920,2.42,921,2.42,922,1.591,923,1.78,924,2.42,925,2.42,926,2.368,927,2.42,928,2.42,929,2.42,930,1.78,931,1.78,932,4.305,933,3.603,934,2.42,935,2.42,936,2.42,937,2.42,938,2.034,939,2.42,940,2.42,941,2.42,942,2.42,943,3.603,944,2.42,945,2.42,946,2.42,947,2.42,948,2.034,949,2.42,950,2.42,951,1.591,952,2.42,953,2.42,954,4.77,955,2.034,956,2.034,957,2.42,958,2.42,959,2.42,960,2.42,961,2.42,962,2.42,963,2.034,964,2.42,965,2.42,966,2.42,967,2.42,968,2.034,969,1.78,970,4.305,971,2.42,972,3.603,973,2.42]],["title/modules.html",[696,3.093]],["body/modules.html",[26,0.026,31,0.022,32,0.026,33,0.022,42,2.623,696,3.462,974,4.428]],["title/overview.html",[975,3.956]],["body/overview.html",[2,0.875,26,0.025,31,0.022,32,0.025,33,0.022,319,2.371,342,2.97,695,3.397,704,3.397,975,4.344,976,3.073,977,5.168]],["title/miscellaneous/typealiases.html",[978,1.976,979,4.216]],["body/miscellaneous/typealiases.html",[19,0.652,26,0.028,28,0.426,31,0.02,32,0.024,33,0.02,54,2.269,99,2.556,218,2.291,425,1.345,428,2.64,429,3.099,497,1.808,627,3.661,689,3.385,690,4.097,922,3.661,978,3.025,980,4.602,981,5.569,982,6.373,983,5.569,984,5.569,985,5.569,986,4.602,987,4.602]],["title/miscellaneous/variables.html",[978,1.976,988,3.544]],["body/miscellaneous/variables.html",[19,0.606,26,0.028,28,0.562,31,0.018,32,0.023,33,0.018,36,0.754,48,1.445,62,1.25,86,2.13,93,2.544,102,2.092,123,2.384,132,1.559,169,1.814,191,2.114,226,0.999,279,3.147,323,1.345,389,3.146,391,1.814,429,2.651,446,1.078,645,3.596,656,3.5,770,3.988,802,3.596,803,4.476,805,4.476,806,4.476,926,2.811,978,2.811,988,3.596,989,5.798,990,5.325,991,5.325,992,5.325,993,5.325,994,5.325,995,4.277,996,4.277,997,4.277,998,4.277,999,3.596]],["title/additional-documentation/quickstart.html",[261,1.275,828,2.212,1000,1.497]],["body/additional-documentation/quickstart.html",[2,0.35,10,1.739,11,1.23,12,1.522,16,1.122,26,0.028,28,0.296,31,0.009,32,0.017,33,0.009,36,0.713,38,2.571,39,1.604,42,2.191,43,2.689,44,3.308,46,1.705,47,2.102,48,1.688,49,3.288,50,1.522,51,1.739,53,2.102,54,1.735,56,1.357,59,1.522,60,3.7,61,0.877,62,0.605,63,1.23,65,0.877,66,1.257,67,3.288,73,1.195,75,0.754,86,2.37,89,1.23,90,1.23,91,1.522,96,1.23,99,0.949,100,0.949,102,0.813,106,0.935,123,1.977,125,1.066,126,1.166,127,0.813,129,1.122,132,1.166,147,2.134,149,1.795,168,0.949,169,0.877,179,0.949,184,1.735,191,1.913,193,2.407,195,1.468,199,2.326,210,1.604,212,1.36,214,1.522,216,1.522,218,1.03,219,1.795,221,1.122,226,1.028,233,1.522,236,2.407,237,2.83,239,0.877,246,0.7,252,1.357,260,2.326,269,1.143,274,2.326,277,1.593,285,0.813,291,2.102,294,1.23,304,2.571,306,1.468,312,0.813,313,1.03,321,1.357,332,0.7,340,1.36,341,1.522,363,1.468,364,1.23,379,1.23,383,1.122,386,1.122,387,2.571,389,1.122,398,1.739,399,1.23,405,1.36,406,0.949,407,1.23,418,1.36,425,1.391,429,1.03,436,1.357,438,1.23,446,0.521,473,1.522,477,1.23,478,0.949,491,1.23,497,0.813,503,1.122,506,2.102,511,1.122,520,1.739,532,1.23,533,1.36,535,1.522,564,1.739,578,1.122,579,1.23,590,1.23,614,1.522,656,1.36,672,1.36,688,1.739,695,2.571,696,1.36,698,2.689,700,1.739,712,1.739,718,1.902,733,1.522,782,1.739,788,1.122,792,1.36,825,1.739,826,1.739,829,1.36,837,1.739,843,1.739,859,1.739,884,1.739,910,1.739,923,1.522,926,2.102,951,1.36,969,1.522,974,2.689,976,1.902,1001,2.069,1002,1.522,1003,2.069,1004,4.759,1005,1.739,1006,3.199,1007,3.199,1008,1.522,1009,2.069,1010,1.739,1011,2.069,1012,2.069,1013,3.128,1014,2.069,1015,2.069,1016,1.522,1017,1.36,1018,1.739,1019,2.069,1020,2.069,1021,2.689,1022,3.199,1023,2.069,1024,3.199,1025,2.326,1026,3.199,1027,2.069,1028,1.739,1029,1.739,1030,2.069,1031,2.069,1032,2.069,1033,2.069,1034,2.069,1035,2.069,1036,1.36,1037,2.689,1038,1.739,1039,1.739,1040,1.36,1041,1.522,1042,2.069,1043,2.069,1044,2.069,1045,1.739,1046,3.199,1047,2.069,1048,2.069,1049,2.689,1050,2.069,1051,2.069,1052,1.739,1053,2.069,1054,1.739,1055,2.069,1056,2.069,1057,2.069,1058,1.739,1059,1.739,1060,2.069,1061,2.069,1062,3.199,1063,3.199,1064,2.069,1065,3.199,1066,2.069,1067,3.199,1068,2.069,1069,2.069,1070,2.069,1071,3.199,1072,2.069,1073,2.069,1074,2.069,1075,2.069,1076,2.069,1077,2.069,1078,2.069,1079,2.069,1080,2.069,1081,2.069,1082,2.069,1083,2.069,1084,2.069,1085,2.069,1086,2.069,1087,2.069,1088,1.522,1089,2.069,1090,2.689,1091,2.069,1092,2.069,1093,2.069,1094,2.069,1095,2.069,1096,2.069,1097,3.199,1098,1.739,1099,1.739,1100,2.069,1101,2.069,1102,1.739,1103,2.689,1104,2.069,1105,2.069,1106,1.739,1107,2.069,1108,1.739,1109,2.069,1110,2.069]],["title/additional-documentation/guide.html",[261,1.275,1000,1.497,1041,2.212]],["body/additional-documentation/guide.html",[17,1.855,20,0.943,26,0.024,31,0.02,32,0.024,33,0.02,36,0.801,46,1.485,73,1.535,74,2.062,75,2.062,97,3.103,126,2.062,127,1.855,177,2.351,210,1.721,220,2.808,221,2.561,234,2.003,295,3.473,319,2.166,322,2.808,324,2.808,342,2.351,397,2.351,399,2.808,622,2.561,714,3.473,788,2.561,1040,3.103,1111,3.473,1112,3.103,1113,3.969,1114,2.808,1115,4.721,1116,4.721,1117,3.103,1118,4.721]],["title/additional-documentation/guide/1.-creating-connections.html",[261,0.983,342,1.154,1000,1.154,1111,1.705,1112,1.524]],["body/additional-documentation/guide/1.-creating-connections.html",[8,2.008,9,2.355,16,1.532,20,0.806,23,1.296,26,0.029,28,0.261,31,0.012,32,0.017,33,0.012,36,0.571,39,1.03,44,1.68,54,1.03,62,0.825,68,1.406,73,1.393,74,2.058,75,1.715,76,2.188,82,1.979,85,1.296,99,1.851,100,1.296,102,1.11,106,0.825,113,3.391,123,1.585,125,0.743,127,1.585,132,1.979,160,0.825,163,2.078,166,1.68,168,1.296,170,1.532,177,2.702,179,1.851,185,2.188,188,1.532,189,1.532,191,1.03,206,1.857,210,1.715,226,1.099,234,2.394,236,1.296,237,1.68,244,1.711,256,2.967,259,1.11,262,2.078,269,1.736,272,1.68,282,1.68,285,1.11,291,1.857,297,2.374,321,1.711,323,1.269,332,1.366,339,1.406,363,1.296,364,1.68,391,1.711,406,1.851,425,0.825,436,1.198,437,1.11,442,2.078,446,1.185,460,1.532,485,2.967,497,1.11,518,1.857,542,2.078,544,3.391,578,1.532,616,1.296,622,1.532,634,3.391,671,1.857,706,2.374,707,2.078,709,2.374,742,2.374,778,2.078,870,2.967,874,2.078,895,2.078,922,1.857,931,2.078,1002,2.078,1013,1.857,1016,2.078,1017,1.857,1025,1.68,1036,1.857,1054,2.374,1106,2.374,1111,2.967,1112,3.092,1114,1.68,1119,3.775,1120,4.034,1121,3.461,1122,4.034,1123,2.825,1124,2.825,1125,2.374,1126,2.967,1127,2.374,1128,2.825,1129,2.825,1130,2.825,1131,2.825,1132,2.825,1133,4.034,1134,3.391,1135,2.825,1136,2.374,1137,2.825,1138,2.825,1139,2.825,1140,2.825,1141,2.374,1142,2.078,1143,2.825,1144,2.825,1145,2.825,1146,2.078,1147,2.825,1148,2.825,1149,2.825,1150,4.034,1151,5.132,1152,2.374,1153,2.825,1154,2.825,1155,2.374,1156,2.374,1157,3.391,1158,2.825,1159,2.825,1160,2.825,1161,2.825,1162,2.825,1163,2.825,1164,2.374]],["title/additional-documentation/guide/2.-connecting-to-dom.html",[73,0.629,144,1.524,261,0.983,1000,1.154,1114,1.379]],["body/additional-documentation/guide/2.-connecting-to-dom.html",[20,0.581,23,1.335,26,0.029,27,1.296,31,0.012,32,0.017,33,0.012,36,0.737,39,1.061,48,1.118,62,1.204,73,1.412,74,1.502,76,2.235,79,2.235,85,1.335,88,1.579,90,1.73,102,1.143,106,0.85,125,1.08,126,1.061,127,1.143,147,1.234,160,0.85,182,3.031,191,1.061,193,1.335,195,2.615,200,2.708,201,3.143,206,1.913,210,2.078,213,2.446,219,1.335,220,2.45,221,1.579,222,2.235,225,1.913,226,1.117,234,1.234,236,1.335,237,1.73,243,1.89,244,1.234,246,2.09,252,1.234,259,1.143,274,1.73,288,2.141,291,2.708,292,3.389,293,2.45,306,1.89,310,1.747,317,1.449,318,1.913,323,1.504,328,1.73,329,1.579,330,1.335,331,1.579,351,3.031,364,1.73,383,1.579,388,2.708,411,1.73,412,2.141,413,2.141,415,2.141,425,1.398,434,1.73,436,1.234,437,1.619,446,1.038,460,1.579,461,1.913,486,1.73,497,1.143,511,1.579,514,1.913,518,1.913,534,2.446,562,1.913,567,1.913,578,1.579,587,1.913,596,1.579,600,2.446,610,2.708,615,2.595,622,2.235,649,2.446,671,1.913,699,2.446,834,2.141,855,1.73,873,2.446,948,2.446,1002,2.141,1113,3.463,1114,1.73,1117,1.913,1121,3.031,1165,2.91,1166,2.91,1167,2.91,1168,4.12,1169,4.12,1170,2.91,1171,4.12,1172,4.12,1173,3.463,1174,4.12,1175,4.12,1176,3.463,1177,4.12,1178,2.91,1179,2.446,1180,2.91,1181,2.91,1182,2.446,1183,2.91,1184,4.12,1185,2.91,1186,2.91,1187,4.12,1188,2.91,1189,2.91,1190,2.446,1191,2.91,1192,2.91,1193,2.91,1194,2.91,1195,2.446,1196,2.91,1197,2.91,1198,2.91,1199,2.141,1200,2.91,1201,2.91,1202,2.91,1203,2.446,1204,2.446,1205,2.91,1206,2.446,1207,2.91,1208,2.91]],["title/additional-documentation/guide/3.-monitoring-state.html",[126,0.845,261,0.983,976,1.379,1000,1.154,1117,1.524]],["body/additional-documentation/guide/3.-monitoring-state.html",[2,0.718,8,1.511,20,0.848,23,2.245,26,0.028,28,0.393,30,0.709,31,0.013,32,0.018,33,0.013,36,0.601,39,1.106,52,2.232,54,1.106,61,1.799,66,1.192,74,1.547,75,2.032,79,2.302,96,1.804,100,2.245,106,1.733,112,1.646,114,1.646,123,1.192,125,0.782,126,1.783,129,1.646,137,2.55,143,1.511,147,1.287,149,1.947,152,1.511,154,1.994,160,1.548,165,1.799,166,1.804,170,2.302,172,3.121,174,2.302,179,1.392,183,2.788,184,2.654,202,1.392,219,1.392,222,1.646,239,1.799,240,1.804,249,2.523,251,1.994,257,2.232,259,1.192,260,1.804,269,1.24,277,1.511,285,1.192,294,1.804,296,1.994,306,1.947,310,1.287,311,1.511,312,1.192,324,1.804,332,1.656,339,1.511,345,1.646,377,1.392,379,2.523,391,1.287,393,3.15,406,1.392,425,1.43,436,1.287,439,2.55,446,1.335,470,1.804,478,1.392,481,2.112,488,2.55,513,1.994,531,1.646,533,1.994,587,1.994,608,2.232,612,1.994,615,1.646,616,1.392,639,1.804,646,3.599,681,2.55,752,2.55,824,2.232,855,1.804,923,2.232,1010,2.55,1017,1.994,1025,3.15,1036,1.994,1045,2.55,1059,2.55,1117,1.994,1119,3.121,1179,2.55,1199,2.232,1209,2.55,1210,2.55,1211,3.566,1212,2.55,1213,3.034,1214,4.892,1215,3.566,1216,3.034,1217,3.034,1218,3.034,1219,4.242,1220,3.034,1221,2.55,1222,2.55,1223,2.55,1224,3.034,1225,3.034,1226,3.034,1227,3.034,1228,4.242,1229,3.034,1230,2.55,1231,3.034,1232,2.55,1233,3.034,1234,2.55,1235,2.55,1236,4.242,1237,3.034,1238,3.034,1239,2.55,1240,3.034,1241,4.242,1242,3.034,1243,3.034,1244,3.034,1245,3.034,1246,2.55,1247,2.55,1248,3.034,1249,3.034,1250,3.034,1251,2.55]],["title/additional-documentation/chess-tutorial.html",[261,1.11,829,1.721,882,1.926,1000,1.304]],["body/additional-documentation/chess-tutorial.html",[0,0.286,4,0.318,8,1.184,9,0.365,11,0.473,16,1.802,20,0.389,23,0.656,26,0.029,27,0.25,28,0.074,30,0.186,31,0.01,32,0.006,33,0.003,36,0.504,39,1.113,41,0.523,42,0.396,44,2.868,46,1.119,48,0.216,52,0.586,53,2.889,54,0.522,56,1.509,62,0.418,63,0.473,65,0.338,72,1.563,73,0.388,75,0.522,76,0.776,80,0.669,82,1.211,83,0.669,90,0.851,91,0.586,96,0.851,97,0.523,99,0.365,102,1.616,103,1.203,106,0.418,114,0.432,123,0.935,125,0.852,126,0.71,127,0.313,128,0.669,129,0.432,131,0.669,132,1.647,143,0.396,144,2.801,147,0.338,148,1.281,149,0.894,150,0.586,152,0.712,153,0.523,154,1.802,156,2.007,160,0.971,161,0.669,165,1.916,166,0.473,168,1.401,170,0.432,174,1.291,177,1.184,179,1.091,180,0.669,182,2.246,185,1.488,189,0.432,192,1.638,193,0.365,195,1.091,201,1.281,202,1.091,209,1.203,210,0.867,218,0.712,219,1.258,220,0.473,221,0.432,222,0.776,225,0.94,226,0.713,234,1.009,236,1.887,237,0.473,239,0.607,241,1.401,242,0.586,243,0.656,244,0.607,246,0.269,247,1.563,249,0.473,250,2.905,251,1.563,253,0.669,255,0.669,259,0.766,261,0.338,262,1.75,269,1.382,271,1.638,272,1.976,275,0.669,276,1.75,277,0.396,281,0.669,284,0.776,285,0.313,288,0.586,292,0.473,293,0.851,294,0.473,303,1.203,304,1.281,306,0.894,310,0.607,312,0.313,321,0.338,322,0.851,326,1.802,330,0.365,332,0.269,339,0.712,341,1.433,342,2.048,343,0.669,346,1.052,351,0.586,353,1.203,357,0.669,358,1.052,364,0.851,368,0.712,369,1.203,372,1.638,377,0.656,380,1.052,383,0.776,386,0.776,388,0.523,389,1.057,390,0.669,392,0.586,393,0.473,396,0.586,397,0.396,405,0.523,406,0.365,407,0.473,408,0.586,411,1.976,412,0.586,413,0.586,415,0.586,425,1.435,428,0.826,436,0.338,438,0.473,442,0.586,446,0.769,448,0.473,460,0.432,477,0.473,478,0.365,480,0.669,481,1.771,484,0.669,485,1.75,486,1.976,490,0.586,495,0.586,497,0.766,503,1.488,506,0.523,511,0.432,514,2.338,516,0.669,518,0.523,530,0.586,531,1.291,532,0.473,541,0.586,550,0.94,551,0.586,561,0.669,562,0.523,567,1.563,568,0.669,570,1.052,572,2.305,573,0.669,574,0.669,576,0.669,579,1.631,587,0.523,590,0.473,596,0.432,598,1.052,604,3.775,606,0.669,608,0.586,610,0.523,615,1.057,616,0.894,646,0.586,653,0.669,657,0.669,658,3.458,672,0.523,684,0.669,693,3.797,694,3.89,695,0.94,697,0.669,704,1.563,718,0.851,743,0.669,754,0.669,755,1.203,778,0.586,788,0.776,789,0.669,795,3.582,813,2.793,818,1.638,824,1.75,828,0.586,829,1.563,834,1.75,844,0.669,846,0.586,850,0.669,855,0.851,870,0.586,874,1.052,876,0.669,879,0.669,882,2.617,885,1.638,892,0.669,895,0.586,899,0.669,922,0.523,930,1.433,931,0.586,938,0.669,951,0.523,955,0.669,969,0.586,976,1.159,1005,0.669,1008,3.135,1013,1.802,1016,1.75,1017,0.523,1018,1.638,1021,0.669,1025,1.631,1029,0.669,1036,0.523,1037,0.669,1038,2.305,1039,2.305,1040,1.281,1041,1.052,1049,1.638,1052,0.669,1058,1.203,1088,0.586,1099,1.203,1103,1.203,1119,1.052,1121,1.433,1125,1.203,1126,1.75,1127,2,1134,0.669,1141,3.319,1142,0.586,1146,0.586,1155,0.669,1156,0.669,1157,0.669,1164,1.638,1173,1.203,1176,0.669,1182,0.669,1190,0.669,1195,0.669,1199,1.052,1203,0.669,1204,0.669,1209,0.669,1210,0.669,1211,0.669,1212,0.669,1215,0.669,1221,0.669,1222,0.669,1223,0.669,1230,1.203,1232,0.669,1234,1.203,1235,0.669,1239,0.669,1247,0.669,1251,0.669,1252,0.796,1253,3.322,1254,5.696,1255,0.669,1256,0.796,1257,0.796,1258,1.431,1259,1.948,1260,4.113,1261,1.431,1262,3.322,1263,4.261,1264,2.379,1265,4.261,1266,3.557,1267,1.948,1268,3.557,1269,1.431,1270,0.796,1271,0.796,1272,0.669,1273,1.948,1274,0.796,1275,0.796,1276,0.796,1277,1.431,1278,1.203,1279,0.796,1280,1.431,1281,1.948,1282,0.796,1283,0.796,1284,3.557,1285,2.379,1286,1.431,1287,0.796,1288,2.379,1289,1.431,1290,0.796,1291,3.949,1292,0.796,1293,0.796,1294,1.431,1295,1.948,1296,0.796,1297,0.796,1298,0.796,1299,0.796,1300,0.796,1301,0.796,1302,1.431,1303,0.796,1304,1.948,1305,1.948,1306,0.796,1307,1.431,1308,0.796,1309,0.796,1310,1.431,1311,1.431,1312,0.796,1313,0.796,1314,0.796,1315,0.796,1316,1.431,1317,0.796,1318,0.796,1319,0.796,1320,0.796,1321,2.742,1322,0.669,1323,1.948,1324,2.379,1325,3.053,1326,0.796,1327,0.796,1328,2.379,1329,0.796,1330,0.796,1331,1.431,1332,0.796,1333,0.796,1334,0.796,1335,0.796,1336,0.796,1337,1.431,1338,2.742,1339,0.796,1340,0.796,1341,0.796,1342,0.796,1343,1.431,1344,2.742,1345,1.203,1346,0.796,1347,0.796,1348,0.669,1349,0.796,1350,0.796,1351,0.796,1352,0.796,1353,1.431,1354,1.431,1355,0.796,1356,0.796,1357,0.796,1358,0.796,1359,0.669,1360,0.796,1361,0.796,1362,0.796,1363,0.796,1364,0.796,1365,0.796,1366,1.431,1367,0.796,1368,4.989,1369,0.796,1370,0.796,1371,0.796,1372,0.796,1373,0.796,1374,1.431,1375,0.796,1376,2.567,1377,0.796,1378,0.796,1379,0.796,1380,3.053,1381,2,1382,0.669,1383,0.796,1384,0.796,1385,3.765,1386,2.742,1387,0.796,1388,0.796,1389,0.796,1390,0.796,1391,0.796,1392,1.431,1393,0.796,1394,0.796,1395,0.796,1396,0.796,1397,0.796,1398,0.796,1399,1.431,1400,1.431,1401,0.796,1402,0.796,1403,1.431,1404,0.796,1405,0.796,1406,0.796,1407,0.796,1408,0.796,1409,0.796,1410,0.796,1411,0.796,1412,0.796,1413,0.796,1414,1.638,1415,0.796,1416,0.796,1417,1.431,1418,0.796,1419,0.796,1420,1.431,1421,1.431,1422,0.796,1423,0.796,1424,1.431,1425,1.948,1426,0.796,1427,1.431,1428,0.796,1429,1.431,1430,0.796,1431,0.796,1432,0.796,1433,0.796,1434,0.796,1435,0.796,1436,1.431,1437,1.431,1438,0.796,1439,0.796,1440,0.796,1441,0.796,1442,0.796,1443,0.796,1444,0.796,1445,0.796,1446,1.431,1447,0.796,1448,0.796,1449,0.796,1450,0.796,1451,0.796,1452,0.796,1453,0.796,1454,0.796,1455,0.796,1456,0.796,1457,0.669,1458,0.796,1459,1.431,1460,0.796,1461,0.796,1462,0.796,1463,3.557,1464,0.669,1465,0.796,1466,0.796,1467,0.796,1468,2,1469,0.796,1470,1.431,1471,0.796,1472,0.796,1473,0.796,1474,0.796,1475,1.948,1476,0.796,1477,0.796,1478,0.796,1479,0.796,1480,0.796,1481,1.431,1482,0.796,1483,1.431,1484,0.796,1485,0.796,1486,1.431,1487,0.669,1488,0.669,1489,0.796,1490,0.796,1491,0.796,1492,1.431,1493,0.796,1494,0.669,1495,0.796,1496,0.796,1497,0.796,1498,0.796,1499,0.796,1500,0.796,1501,0.796,1502,0.796,1503,0.669,1504,0.796,1505,0.796,1506,0.796,1507,0.796,1508,0.796,1509,0.796,1510,0.796,1511,2.742,1512,2,1513,0.796,1514,0.796,1515,1.431,1516,0.796,1517,1.948,1518,0.669,1519,1.431,1520,0.796,1521,0.796,1522,0.796,1523,0.796,1524,0.796,1525,0.796,1526,0.796,1527,0.796,1528,0.796,1529,0.796,1530,0.796,1531,0.796,1532,0.796,1533,0.796,1534,0.796,1535,0.796,1536,1.431,1537,1.431,1538,0.796,1539,0.796,1540,0.796,1541,0.796,1542,0.796,1543,0.796,1544,0.796,1545,0.796,1546,0.796,1547,0.796,1548,0.796,1549,0.796,1550,0.796,1551,0.796,1552,0.796,1553,0.796,1554,0.796,1555,0.796,1556,0.796,1557,0.796,1558,0.796,1559,2.742,1560,0.796,1561,0.796,1562,0.796,1563,0.796,1564,1.431,1565,0.796,1566,1.431,1567,0.796,1568,1.431,1569,0.796,1570,0.796,1571,0.796,1572,0.796,1573,0.796]],["title/additional-documentation/translating-react-code.html",[147,0.983,149,1.064,261,0.983,862,1.705,1000,1.154]],["body/additional-documentation/translating-react-code.html",[2,0.298,9,1.292,18,0.691,20,0.352,23,1.616,26,0.029,28,0.326,30,0.411,31,0.007,32,0.012,33,0.007,36,0.499,41,1.157,46,1.885,53,1.851,54,1.605,56,1.494,61,0.746,62,1.029,63,2.619,65,0.746,66,1.846,73,1.275,74,1.467,75,1.027,79,0.955,82,1.027,88,1.528,93,1.046,96,1.046,99,0.807,100,2.021,102,0.691,106,1.545,111,1.479,114,1.528,123,2.216,125,0.742,126,1.027,132,1.868,133,1.479,135,1.295,136,1.157,139,1.295,143,0.876,144,1.157,147,2.582,148,1.157,149,2.021,150,1.295,152,2.004,153,1.851,160,0.514,165,1.868,169,1.494,170,0.955,171,1.479,172,1.295,174,1.528,175,0.807,177,0.876,179,0.807,184,1.911,185,0.955,189,0.955,191,0.642,197,1.295,202,1.616,210,1.284,212,1.157,216,1.295,219,0.807,220,1.675,225,1.157,226,0.411,234,1.494,236,1.292,243,1.292,244,1.195,247,1.851,249,1.046,252,0.746,259,0.691,260,2.094,269,1.751,272,2.094,277,0.876,284,0.955,285,1.107,286,1.157,293,1.046,294,1.046,296,1.157,304,1.157,305,1.479,306,1.847,310,0.746,317,1.402,319,1.292,321,0.746,323,0.886,324,1.675,328,2.094,330,1.616,332,1.363,340,1.157,342,0.876,363,1.847,368,0.876,383,1.528,386,0.955,389,0.955,392,1.295,393,2.094,395,1.479,397,2.004,399,1.046,400,1.479,401,2.96,403,1.479,407,1.046,411,1.046,428,0.746,433,1.157,434,1.046,435,1.295,438,1.046,440,1.157,441,1.295,443,1.479,460,1.528,481,1.402,489,1.479,491,1.675,503,0.955,513,1.157,515,1.479,531,2.184,532,1.046,550,1.157,567,1.157,570,2.072,578,0.955,596,2.389,598,1.295,615,0.955,616,1.292,622,0.955,714,1.295,728,1.479,732,2.368,733,1.295,735,1.479,788,0.955,792,1.851,846,1.295,855,1.046,861,1.479,862,1.295,865,1.479,900,1.479,926,1.851,930,1.295,951,2.315,956,1.479,963,1.479,968,1.479,976,1.046,999,1.479,1008,2.591,1013,2.894,1025,1.675,1028,1.479,1040,1.851,1088,1.295,1090,2.368,1098,2.368,1102,1.479,1108,1.479,1112,2.646,1114,1.046,1126,1.295,1136,1.479,1142,2.072,1146,1.295,1152,1.479,1206,1.479,1246,1.479,1255,2.368,1272,1.479,1278,1.479,1322,1.479,1345,1.479,1348,1.479,1359,1.479,1376,2.368,1381,1.479,1382,1.479,1414,2.368,1457,1.479,1464,1.479,1468,1.479,1487,1.479,1488,1.479,1494,1.479,1503,2.368,1512,2.96,1518,1.479,1574,1.76,1575,1.76,1576,1.76,1577,1.76,1578,1.76,1579,1.76,1580,2.817,1581,1.76,1582,1.76,1583,1.76,1584,1.76,1585,1.76,1586,1.76,1587,1.76,1588,1.76,1589,1.76,1590,2.817,1591,5.727,1592,4.697,1593,1.76,1594,1.76,1595,1.76,1596,2.817,1597,2.817,1598,1.76,1599,1.76,1600,1.76,1601,1.76,1602,1.76,1603,1.76,1604,1.76,1605,1.76,1606,1.76,1607,1.76,1608,1.76,1609,1.76,1610,3.522,1611,2.817,1612,2.817,1613,1.76,1614,1.76,1615,2.817,1616,4.025,1617,3.522,1618,1.76,1619,2.817,1620,1.76,1621,1.76,1622,1.76,1623,1.76,1624,1.76,1625,1.76,1626,1.76,1627,1.76,1628,1.76,1629,1.76,1630,2.817,1631,1.76,1632,1.76,1633,1.76,1634,1.76,1635,1.76,1636,1.76,1637,1.76,1638,1.76,1639,1.76,1640,1.76,1641,1.76,1642,1.76,1643,1.76,1644,1.76,1645,1.76,1646,1.76,1647,1.76,1648,1.76,1649,1.76,1650,1.76,1651,1.76,1652,1.76,1653,1.76,1654,1.76,1655,1.76,1656,1.76,1657,3.522,1658,1.76,1659,1.76,1660,1.76,1661,1.76,1662,1.76,1663,1.76,1664,1.76,1665,1.76,1666,2.817,1667,1.76,1668,1.76,1669,1.76,1670,1.76,1671,1.76]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["0",{"_index":341,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["0..63",{"_index":1371,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["0.25",{"_index":1497,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["0.5",{"_index":343,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["0.8.26",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["02",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":342,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"interfaces/DragPreviewOptions.html":{},"injectables/SkyhookDndService.html":{},"overview.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["1.0.10",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["1.9.0",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":795,"title":{},"body":{"coverage.html":{},"additional-documentation/chess-tutorial.html":{}}}],["11",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["12.5",{"_index":1354,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["14",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":977,"title":{},"body":{"overview.html":{}}}],["1px",{"_index":1350,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["2",{"_index":144,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["2/2",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["2019",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["2d",{"_index":906,"title":{},"body":{"index.html":{}}}],["3",{"_index":976,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["3/3",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1468,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["4/4",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1287,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["5",{"_index":1381,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["5.5",{"_index":1548,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["5/5",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["50f7dc9",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["54px",{"_index":1289,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["560px",{"_index":1358,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["6",{"_index":1656,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["6.0.0",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1267,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["7.0.1",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1482,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["70px",{"_index":1292,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["8",{"_index":1374,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["8/8",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["874723a",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["8x8",{"_index":1343,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["above",{"_index":63,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["abramov",{"_index":821,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":1337,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["abstraction",{"_index":869,"title":{},"body":{"index.html":{}}}],["accept",{"_index":1034,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["access",{"_index":1246,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["accessors",{"_index":631,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["accomplish",{"_index":1619,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["achieve",{"_index":1312,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["action",{"_index":526,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["actions",{"_index":588,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["actual",{"_index":1575,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["actually",{"_index":899,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["add",{"_index":16,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["add(teardown",{"_index":77,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["add(teardownlogic",{"_index":21,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["added",{"_index":1359,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["adding",{"_index":1003,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["additional",{"_index":1000,"title":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}},"body":{}}],["addsubscription",{"_index":1,"title":{"interfaces/AddSubscription.html":{}},"body":{"interfaces/AddSubscription.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{}}}],["advanced",{"_index":1106,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["advantage",{"_index":857,"title":{},"body":{"index.html":{}}}],["advice",{"_index":263,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["affected",{"_index":1308,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["again",{"_index":1010,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["aliases",{"_index":980,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1326,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["allow",{"_index":1453,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["allowing",{"_index":634,"title":{},"body":{"directives/DropTargetDirective.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["allows",{"_index":321,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["already",{"_index":368,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["alt",{"_index":557,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["alternate",{"_index":1045,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["alternatives",{"_index":917,"title":{},"body":{"index.html":{}}}],["always",{"_index":1199,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ambitious",{"_index":880,"title":{},"body":{"index.html":{}}}],["amend",{"_index":1424,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["anchorx",{"_index":334,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["anchory",{"_index":335,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["angular",{"_index":46,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["angular's",{"_index":1309,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["angular/core",{"_index":813,"title":{},"body":{"dependencies.html":{},"additional-documentation/chess-tutorial.html":{}}}],["another",{"_index":610,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["answer",{"_index":1461,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["anything",{"_index":288,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["anyway",{"_index":617,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["aot",{"_index":60,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["api",{"_index":1580,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["apis",{"_index":841,"title":{},"body":{"index.html":{}}}],["app",{"_index":1039,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["app.module.ts",{"_index":1078,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["appear",{"_index":618,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["appearance",{"_index":1505,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["appearance—even",{"_index":605,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["applies",{"_index":467,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["apply",{"_index":369,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["applying",{"_index":1200,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["appmodule",{"_index":1009,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["approach",{"_index":1624,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["appropriate",{"_index":733,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["arbitrarily",{"_index":1318,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["arbitrary",{"_index":1668,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["area",{"_index":890,"title":{},"body":{"index.html":{}}}],["aren't",{"_index":950,"title":{},"body":{"index.html":{}}}],["argument",{"_index":732,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["arguments",{"_index":1628,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["around",{"_index":182,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["array",{"_index":922,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["array(64).fill(0).map((_",{"_index":1342,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["arrow",{"_index":1090,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["ask",{"_index":301,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["asking",{"_index":736,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["assembly",{"_index":1062,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["assign",{"_index":549,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["assigning",{"_index":729,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["associated",{"_index":1653,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["assumes",{"_index":1269,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["assuming",{"_index":1547,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["assumptions",{"_index":1504,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["async",{"_index":1211,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["asynchronous",{"_index":1666,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["attach",{"_index":1121,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["attached",{"_index":1156,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["attaching",{"_index":1306,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["attention",{"_index":1330,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["automatic",{"_index":290,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["automatically",{"_index":416,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["available",{"_index":239,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["avoid",{"_index":575,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["avoiding",{"_index":724,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["aware",{"_index":1632,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["backend",{"_index":48,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["backend';generally",{"_index":1075,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["backendfactory",{"_index":50,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["backendfactoryinput",{"_index":34,"title":{"interfaces/BackendFactoryInput.html":{}},"body":{"interfaces/BackendFactoryInput.html":{},"modules/SkyhookDndModule.html":{},"coverage.html":{}}}],["backendinput",{"_index":64,"title":{"interfaces/BackendInput.html":{}},"body":{"interfaces/BackendInput.html":{},"modules/SkyhookDndModule.html":{},"coverage.html":{}}}],["backendnext",{"_index":827,"title":{},"body":{"index.html":{}}}],["backendorbackendfactory",{"_index":702,"title":{},"body":{"modules/SkyhookDndModule.html":{}}}],["backends",{"_index":38,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["backendyou",{"_index":1001,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["background",{"_index":1215,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["backgroundcolor",{"_index":1304,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bare",{"_index":918,"title":{},"body":{"index.html":{}}}],["base",{"_index":71,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["base.ts",{"_index":670,"title":{},"body":{"interfaces/MonitorBase.html":{},"coverage.html":{}}}],["based",{"_index":277,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["basic",{"_index":1278,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["basics",{"_index":1271,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["batches",{"_index":852,"title":{},"body":{"index.html":{}}}],["bbb",{"_index":1413,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["become",{"_index":659,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["becomes",{"_index":207,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["before",{"_index":41,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["begindrag",{"_index":460,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["begindrag(monitor",{"_index":563,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["behaviorsubject",{"_index":1386,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["behaviour",{"_index":622,"title":{},"body":{"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["behavioursubject",{"_index":1394,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["being",{"_index":243,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["belong",{"_index":957,"title":{},"body":{"index.html":{}}}],["below",{"_index":1181,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["benefit",{"_index":965,"title":{},"body":{"index.html":{}}}],["best",{"_index":539,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["better",{"_index":1403,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["between",{"_index":340,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["beyond",{"_index":1135,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["bg",{"_index":1559,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["big",{"_index":1320,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["biggest",{"_index":1609,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["binding",{"_index":466,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["bit",{"_index":1459,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["black",{"_index":1263,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["blindly",{"_index":479,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["block",{"_index":1321,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["blocks",{"_index":873,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["board",{"_index":604,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["boardcomponent",{"_index":1266,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["boardsquarecomponent",{"_index":1511,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["body",{"_index":1300,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["boilerplate",{"_index":1390,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bones",{"_index":919,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":316,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["boolean;then",{"_index":1301,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["border",{"_index":1349,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["born",{"_index":943,"title":{},"body":{"index.html":{}}}],["both",{"_index":532,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["bottom",{"_index":359,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["bound",{"_index":164,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["bounding",{"_index":1168,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["box",{"_index":1187,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["break",{"_index":1256,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["breaking",{"_index":1423,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["brevity's",{"_index":1356,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["broadcast",{"_index":1391,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["broken",{"_index":469,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["browse",{"_index":974,"title":{},"body":{"modules.html":{},"additional-documentation/quickstart.html":{}}}],["browser",{"_index":1052,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["browsers",{"_index":517,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["browsing",{"_index":1044,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["bug",{"_index":767,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["build",{"_index":1280,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["builder",{"_index":911,"title":{},"body":{"index.html":{}}}],["building",{"_index":818,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["bump",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["c.candrop",{"_index":1555,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["c.isdragging",{"_index":167,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["c.isover",{"_index":1554,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cad",{"_index":907,"title":{},"body":{"index.html":{}}}],["call",{"_index":406,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["callback",{"_index":88,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["callbacks",{"_index":184,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["called",{"_index":175,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["calling",{"_index":1084,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["came",{"_index":1502,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["can't",{"_index":1088,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["candrag",{"_index":473,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["candrag(monitor",{"_index":581,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["candrop",{"_index":156,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["candrop(monitor",{"_index":654,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["canmoveknight",{"_index":1425,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["canmoveknight(to",{"_index":1431,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["capturedraggingstate",{"_index":336,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{}}}],["card",{"_index":601,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["cards",{"_index":897,"title":{},"body":{"index.html":{}}}],["carry",{"_index":1247,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["case",{"_index":158,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetSpec.html":{}}}],["cases",{"_index":190,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["cat",{"_index":1214,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["cats",{"_index":1213,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["center",{"_index":1327,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["certain",{"_index":196,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["chain",{"_index":500,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["change",{"_index":202,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["changelog",{"_index":748,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":127,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["changing",{"_index":1230,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["character",{"_index":1283,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["check",{"_index":590,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["checking",{"_index":662,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["checks",{"_index":138,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["chess",{"_index":882,"title":{"additional-documentation/chess-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["chessboard",{"_index":1364,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["child",{"_index":506,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["choose",{"_index":176,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["circumstances",{"_index":538,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["class",{"_index":1008,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["classes",{"_index":672,"title":{},"body":{"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["clean",{"_index":717,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["clearer",{"_index":1416,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["clearly",{"_index":1379,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["click",{"_index":1049,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["client",{"_index":302,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["code",{"_index":149,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["codebase",{"_index":958,"title":{},"body":{"index.html":{}}}],["coll",{"_index":1558,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["collect",{"_index":1616,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["collect((props",{"_index":1636,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["collected",{"_index":150,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["color",{"_index":1305,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["colour",{"_index":1295,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["columns",{"_index":1352,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["combination",{"_index":1219,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["combine",{"_index":1642,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["comes",{"_index":1635,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["commence",{"_index":1027,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["commit",{"_index":755,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["commits",{"_index":754,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["common",{"_index":671,"title":{},"body":{"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["community",{"_index":964,"title":{},"body":{"index.html":{}}}],["compared",{"_index":1585,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["compatibility",{"_index":12,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["compatible",{"_index":656,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["complete",{"_index":1272,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["completions",{"_index":1109,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["complex",{"_index":819,"title":{},"body":{"index.html":{}}}],["component",{"_index":269,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["component's",{"_index":441,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["component.fireaction(monitor.getitem",{"_index":1594,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["components",{"_index":185,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["composing",{"_index":1620,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["comprehensive",{"_index":863,"title":{},"body":{"index.html":{}}}],["comprehensively",{"_index":1100,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["compute",{"_index":1449,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["computed",{"_index":1508,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["concept",{"_index":1613,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["concepts",{"_index":1024,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["conceptually",{"_index":1491,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["concerned",{"_index":1319,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["configuration",{"_index":854,"title":{},"body":{"index.html":{}}}],["configuring",{"_index":40,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["confusing",{"_index":1488,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["confusion",{"_index":633,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["connect",{"_index":397,"title":{},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["connect.connectdragsource",{"_index":1596,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connectdragpreview",{"_index":400,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectdragpreview(elementornode",{"_index":404,"title":{},"body":{"interfaces/DragSource.html":{}}}],["connectdragsource",{"_index":401,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectdragsource(elementornode",{"_index":422,"title":{},"body":{"interfaces/DragSource.html":{}}}],["connectdroptarget",{"_index":623,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["connectdroptarget(elementornode",{"_index":625,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["connected",{"_index":434,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["connecting",{"_index":1114,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["connection",{"_index":74,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["connection's",{"_index":1115,"title":{},"body":{"additional-documentation/guide.html":{}}}],["connection.unsubscribe",{"_index":708,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["connectionbase",{"_index":68,"title":{"interfaces/ConnectionBase.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["connectionbase.unsubscribe",{"_index":1627,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connections",{"_index":1112,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectors",{"_index":1654,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connects",{"_index":1650,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["consider",{"_index":1002,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["considered",{"_index":593,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["console.log('dropped",{"_index":1179,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["const",{"_index":411,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["constant",{"_index":1472,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constants",{"_index":1481,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constants.ts",{"_index":1474,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constructor",{"_index":1173,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["constructor(private",{"_index":1126,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["constructors",{"_index":720,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["consumers",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contain",{"_index":15,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["containercomponent",{"_index":1360,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["content",{"_index":488,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["contributors",{"_index":959,"title":{},"body":{"index.html":{}}}],["convenience",{"_index":1148,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["convenient",{"_index":87,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{}}}],["conventional",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["convert",{"_index":1370,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cookie",{"_index":928,"title":{},"body":{"index.html":{}}}],["cool",{"_index":1346,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coord",{"_index":1368,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coord.ts",{"_index":1369,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coordinate",{"_index":298,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/Offset.html":{}}}],["coordinates",{"_index":303,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["copy",{"_index":513,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["copying",{"_index":521,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["core",{"_index":770,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["core's",{"_index":124,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["cormacrelf",{"_index":944,"title":{},"body":{"index.html":{}}}],["corollary",{"_index":730,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["correctly",{"_index":1076,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["corresponds",{"_index":522,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["couples",{"_index":577,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["course",{"_index":1581,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["coverage",{"_index":791,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":234,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["createbackend",{"_index":1063,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["created",{"_index":1165,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["createdefaultmultibackend",{"_index":45,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["creates",{"_index":433,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["createtouchbackend",{"_index":55,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["creating",{"_index":1111,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["css",{"_index":834,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["current",{"_index":249,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["currently",{"_index":645,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"miscellaneous/variables.html":{}}}],["currentposition",{"_index":1427,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cursor",{"_index":388,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["custom",{"_index":206,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["customisations",{"_index":510,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["customise",{"_index":1176,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["customize",{"_index":1564,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cutter",{"_index":929,"title":{},"body":{"index.html":{}}}],["d14b101",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["dan",{"_index":820,"title":{},"body":{"index.html":{}}}],["data",{"_index":223,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{}}}],["data:image/png;base64",{"_index":1567,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dead",{"_index":1476,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["deadline",{"_index":934,"title":{},"body":{"index.html":{}}}],["decisions",{"_index":1245,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["declarations",{"_index":697,"title":{},"body":{"modules/SkyhookDndModule.html":{},"additional-documentation/chess-tutorial.html":{}}}],["declared",{"_index":1629,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decorating",{"_index":1615,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decorators",{"_index":1622,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decreased",{"_index":371,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["deep",{"_index":1314,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["default",{"_index":191,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["defer",{"_index":1670,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["define",{"_index":551,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["defined",{"_index":477,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["definitions",{"_index":1077,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["degradation",{"_index":621,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["deleting",{"_index":886,"title":{},"body":{"index.html":{}}}],["demo",{"_index":1099,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["demonstrations",{"_index":915,"title":{},"body":{"index.html":{}}}],["demos",{"_index":1589,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["depend",{"_index":1665,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dependencies",{"_index":771,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["depending",{"_index":251,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["depends",{"_index":973,"title":{},"body":{"index.html":{}}}],["derive",{"_index":1226,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["describe",{"_index":1469,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["describing",{"_index":566,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["description",{"_index":6,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"injectables/SkyhookDndService.html":{}}}],["designed",{"_index":233,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["desirable",{"_index":375,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["desktop",{"_index":1050,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["desktops",{"_index":1051,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["destroy",{"_index":714,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["destroy.unsubscribe",{"_index":716,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["destroyed",{"_index":113,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["destroying",{"_index":1137,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["destructive",{"_index":527,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["details",{"_index":591,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["detection",{"_index":611,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["determine",{"_index":583,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["devices",{"_index":1047,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["diagramming",{"_index":901,"title":{},"body":{"index.html":{}}}],["diddrop",{"_index":474,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["difference",{"_index":1610,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["differences",{"_index":1582,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["different",{"_index":306,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["difficult",{"_index":1528,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["directive",{"_index":317,"title":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}},"body":{"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["directives",{"_index":319,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"overview.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["directly",{"_index":407,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["directory",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["disappears",{"_index":1462,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["discover",{"_index":1202,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["discussed",{"_index":968,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["discussion",{"_index":653,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dispatched",{"_index":501,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["displacement",{"_index":683,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["display",{"_index":276,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dist",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["distinctuntilchanged",{"_index":137,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["div",{"_index":1324,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["divs",{"_index":1335,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dnd",{"_index":123,"title":{},"body":{"interfaces/ConnectionBase.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dnd's",{"_index":731,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["dnd.dragsource(\"item",{"_index":1602,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dndservice.droptarget(types",{"_index":105,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dock",{"_index":352,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["docs",{"_index":305,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["documentation",{"_index":792,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["documented",{"_index":752,"title":{},"body":{"changelog.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["doesn't",{"_index":386,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["doing",{"_index":576,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dom",{"_index":73,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["don't",{"_index":179,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["done",{"_index":1142,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["down",{"_index":895,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["drag",{"_index":125,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["drag/drop",{"_index":878,"title":{},"body":{"index.html":{}}}],["drag/listen",{"_index":737,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["drag_drop_backend",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_manager",{"_index":805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dragdropmanager",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["draggable",{"_index":293,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragged",{"_index":244,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragging",{"_index":168,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["draglayer",{"_index":188,"title":{"interfaces/DragLayer.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["draglayer(subscription",{"_index":727,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["draglayer.listen",{"_index":238,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["draglayermonitor",{"_index":240,"title":{"interfaces/DragLayerMonitor.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["dragpreview",{"_index":327,"title":{},"body":{"directives/DragPreviewDirective.html":{}}}],["dragpreview]=\"source",{"_index":1184,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragpreviewdirective",{"_index":318,"title":{"directives/DragPreviewDirective.html":{}},"body":{"directives/DragPreviewDirective.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragpreviewoptions",{"_index":329,"title":{"interfaces/DragPreviewOptions.html":{}},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsource",{"_index":323,"title":{"interfaces/DragSource.html":{}},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource's",{"_index":472,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["dragsource(\"item",{"_index":1595,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource(type",{"_index":728,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource.connectdragpreview",{"_index":1208,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsource.listen",{"_index":1494,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource.settype",{"_index":1671,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource]=\"itemsource",{"_index":1652,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource]=\"source",{"_index":1197,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcedecorator",{"_index":981,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dragsourcedirective",{"_index":461,"title":{"directives/DragSourceDirective.html":{}},"body":{"directives/DragSourceDirective.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcefactory",{"_index":983,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dragsourcemonitor",{"_index":470,"title":{"interfaces/DragSourceMonitor.html":{}},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["dragsourcemonitor.id",{"_index":595,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["dragsourcemonitor.isdragging",{"_index":1495,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dragsourceoptions",{"_index":423,"title":{"interfaces/DragSourceOptions.html":{}},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"coverage.html":{}}}],["dragsourcespec",{"_index":437,"title":{"interfaces/DragSourceSpec.html":{}},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcespec.begindrag",{"_index":278,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["dragsourcetype",{"_index":462,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["dragula",{"_index":933,"title":{},"body":{"index.html":{}}}],["draw",{"_index":903,"title":{},"body":{"index.html":{}}}],["drill",{"_index":894,"title":{},"body":{"index.html":{}}}],["drive",{"_index":1383,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["drop",{"_index":425,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["drop(monitor",{"_index":655,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["dropeffect",{"_index":512,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{}}}],["dropped",{"_index":562,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dropping",{"_index":91,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dropresult",{"_index":507,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{}}}],["drops",{"_index":1454,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptarget",{"_index":391,"title":{"interfaces/DropTarget.html":{}},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["droptarget's",{"_index":641,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["droptarget(types",{"_index":746,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["droptarget.listen",{"_index":1541,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetdecorator",{"_index":984,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["droptargetdirective",{"_index":628,"title":{"directives/DropTargetDirective.html":{}},"body":{"directives/DropTargetDirective.html":{},"coverage.html":{}}}],["droptargetfactory",{"_index":985,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["droptargetmonitor",{"_index":639,"title":{"interfaces/DropTargetMonitor.html":{}},"body":{"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["droptargetmonitor.candrop",{"_index":1542,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetmonitor.isover",{"_index":1543,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetspec",{"_index":85,"title":{"interfaces/DropTargetSpec.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["droptargetspec.candrop",{"_index":1221,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["droptargetspec.drop",{"_index":1251,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["droptargettype",{"_index":629,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["droptargettypes",{"_index":630,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["dt",{"_index":104,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dt.add(subj.pipe",{"_index":115,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dumb",{"_index":268,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["duplication",{"_index":258,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["duration",{"_index":94,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["during",{"_index":548,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["dx",{"_index":1432,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dy",{"_index":1434,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dynamic",{"_index":440,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["dynamically",{"_index":430,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["e.g",{"_index":1191,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["each",{"_index":1025,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["earlier",{"_index":1540,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["easier",{"_index":455,"title":{},"body":{"interfaces/DragSource.html":{}}}],["easily",{"_index":408,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/chess-tutorial.html":{}}}],["easy",{"_index":707,"title":{},"body":{"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["editor",{"_index":1107,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["eee",{"_index":1216,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["effectively",{"_index":265,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["efficient",{"_index":1640,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["element",{"_index":246,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["element's",{"_index":1167,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["elementornode",{"_index":420,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["elementref",{"_index":1651,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["elementref.nativeelement",{"_index":410,"title":{},"body":{"interfaces/DragSource.html":{}}}],["elements",{"_index":220,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["elsewhere",{"_index":1382,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["emit",{"_index":1033,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["emits",{"_index":1477,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["empty",{"_index":385,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["emulate",{"_index":146,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["enabled",{"_index":1067,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["enabled/disabled",{"_index":482,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["enablemouseevents",{"_index":57,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["encapsulation",{"_index":1311,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["encountered",{"_index":1081,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["enddrag",{"_index":491,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["enddrag(monitor",{"_index":585,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ends",{"_index":231,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{}}}],["enough",{"_index":1316,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["enters",{"_index":851,"title":{},"body":{"index.html":{}}}],["entire",{"_index":1234,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["equality",{"_index":140,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["erasedto",{"_index":232,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["ergonomic",{"_index":867,"title":{},"body":{"index.html":{}}}],["error",{"_index":1080,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["es6",{"_index":1662,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["especially",{"_index":1158,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["essentially",{"_index":130,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["etc",{"_index":1647,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["etcthen",{"_index":1174,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["even",{"_index":284,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["event",{"_index":490,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["events",{"_index":274,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["everything",{"_index":1152,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["exactly",{"_index":1239,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["example",{"_index":66,"title":{},"body":{"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["examples",{"_index":260,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["except",{"_index":1466,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["execute",{"_index":1442,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["executing",{"_index":1439,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["exist",{"_index":187,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["existing",{"_index":198,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["exiting",{"_index":92,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["expect",{"_index":546,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["experience",{"_index":620,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["explicitly",{"_index":504,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["export",{"_index":53,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["exported",{"_index":1060,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["exports",{"_index":698,"title":{},"body":{"modules/SkyhookDndModule.html":{},"additional-documentation/quickstart.html":{}}}],["express",{"_index":1366,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["expresses",{"_index":1220,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["extended",{"_index":652,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["extends",{"_index":18,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/translating-react-code.html":{}}}],["extra",{"_index":550,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["f5a19b8",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["fact",{"_index":942,"title":{},"body":{"index.html":{}}}],["fairly",{"_index":1579,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["false",{"_index":58,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["familiar",{"_index":1270,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["famous",{"_index":896,"title":{},"body":{"index.html":{}}}],["fancy",{"_index":1407,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["far",{"_index":1645,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["faster",{"_index":935,"title":{},"body":{"index.html":{}}}],["feature",{"_index":518,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["features",{"_index":832,"title":{},"body":{"index.html":{}}}],["few",{"_index":892,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["figure",{"_index":1533,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["find",{"_index":938,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["finished",{"_index":1274,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["fire",{"_index":183,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["fireaction",{"_index":1599,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fireaction(item",{"_index":1605,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fired",{"_index":1166,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["fires",{"_index":178,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["first",{"_index":1125,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["fit",{"_index":842,"title":{},"body":{"index.html":{}}}],["five",{"_index":1623,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fixed",{"_index":253,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["fixes",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["flag",{"_index":483,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["flight",{"_index":844,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["floating",{"_index":1471,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["flow",{"_index":840,"title":{},"body":{"index.html":{}}}],["flows",{"_index":224,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["fly",{"_index":452,"title":{},"body":{"interfaces/DragSource.html":{}}}],["folder",{"_index":779,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["follow",{"_index":221,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["following",{"_index":96,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["follows",{"_index":1182,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["font",{"_index":1285,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["foreground",{"_index":1296,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["forget",{"_index":712,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{}}}],["form",{"_index":1183,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["forroot",{"_index":700,"title":{},"body":{"modules/SkyhookDndModule.html":{},"additional-documentation/quickstart.html":{}}}],["forroot(backendorbackendfactory",{"_index":701,"title":{},"body":{"modules/SkyhookDndModule.html":{}}}],["forrootto",{"_index":1015,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["found",{"_index":956,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["four",{"_index":1273,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["free",{"_index":1641,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["frequently",{"_index":667,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["fresh",{"_index":1378,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["friendly",{"_index":843,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["full",{"_index":856,"title":{},"body":{"index.html":{}}}],["function",{"_index":54,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["functioning",{"_index":1625,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["functions",{"_index":294,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["funky",{"_index":1572,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["game",{"_index":1253,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice",{"_index":1385,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice.canmoveknight",{"_index":1450,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice.moveknight",{"_index":1417,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["general",{"_index":295,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide.html":{}}}],["getclientoffset",{"_index":673,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getdifferencefrominitialoffset",{"_index":674,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getdropresult",{"_index":475,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["gethandlerid",{"_index":402,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["getinitialclientoffset",{"_index":675,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getinitialsourceclientoffset",{"_index":676,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getitem",{"_index":677,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getitemtype",{"_index":678,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["gets",{"_index":608,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["getsourceclientoffset",{"_index":679,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getstyle",{"_index":1302,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["getting",{"_index":747,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["gifs",{"_index":916,"title":{},"body":{"index.html":{}}}],["github",{"_index":969,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["give",{"_index":1411,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["given",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gives",{"_index":1638,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["glance",{"_index":1490,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["global",{"_index":216,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["gme",{"_index":1525,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["go",{"_index":1376,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["goals",{"_index":847,"title":{},"body":{"index.html":{}}}],["going",{"_index":658,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["good",{"_index":579,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["grab",{"_index":1201,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["graphical",{"_index":909,"title":{},"body":{"index.html":{}}}],["green",{"_index":1537,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["greenplus",{"_index":560,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["grid",{"_index":1344,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["grouping",{"_index":162,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["groupings",{"_index":451,"title":{},"body":{"interfaces/DragSource.html":{}}}],["guidance",{"_index":1526,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["guide",{"_index":1041,"title":{"additional-documentation/guide.html":{}},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["guidelines",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["habit",{"_index":723,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["handle",{"_index":292,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["handled",{"_index":409,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["handler",{"_index":1445,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["handles",{"_index":1163,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["handlesquareclick",{"_index":1438,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["handlesquareclick(pos",{"_index":1420,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hanging",{"_index":181,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["happen",{"_index":1465,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["happens",{"_index":879,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["happily",{"_index":145,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["hard",{"_index":574,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["having",{"_index":711,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["head",{"_index":1069,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["heavy",{"_index":1520,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["height",{"_index":1291,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["help",{"_index":963,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["helpful",{"_index":1243,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["here",{"_index":616,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["here's",{"_index":1414,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["hide",{"_index":382,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["high",{"_index":848,"title":{},"body":{"index.html":{}}}],["higher",{"_index":1611,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["highlighted",{"_index":1250,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["hinders",{"_index":1233,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["hint",{"_index":524,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["hoist",{"_index":738,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["hold",{"_index":1367,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hook",{"_index":743,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["hooks",{"_index":1029,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["horizontal",{"_index":348,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["horse",{"_index":1573,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["host",{"_index":1323,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hover",{"_index":89,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["hover(monitor",{"_index":666,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["hovered",{"_index":649,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["hovering",{"_index":646,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["hovers",{"_index":668,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["html",{"_index":1299,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["html5",{"_index":193,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["html5backend",{"_index":67,"title":{},"body":{"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["html5dropresult",{"_index":553,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["https",{"_index":1569,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["i.e",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":561,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["id",{"_index":282,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["idea",{"_index":580,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["identical",{"_index":1539,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["identifier",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":381,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["ie11",{"_index":468,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["illegal",{"_index":1443,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["illustrate",{"_index":1584,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["image",{"_index":201,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["imaginary",{"_index":1074,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["imagine",{"_index":1659,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["img",{"_index":412,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["img.onload",{"_index":413,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["img.src",{"_index":415,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["immediate",{"_index":419,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["immediately",{"_index":361,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["implement",{"_index":874,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["implementation",{"_index":1236,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["implemented",{"_index":1048,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["implementing",{"_index":1259,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["import",{"_index":44,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["important",{"_index":286,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["importing",{"_index":1071,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["imports",{"_index":1007,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["improvements",{"_index":967,"title":{},"body":{"index.html":{}}}],["include",{"_index":1018,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["includes",{"_index":1059,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["including",{"_index":297,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["incorporate",{"_index":1519,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["independent",{"_index":1361,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":1527,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["indices",{"_index":1372,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["inferring",{"_index":537,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{}}}],["information",{"_index":393,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["initial",{"_index":684,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["initialized",{"_index":1014,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["initiated",{"_index":509,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{}}}],["inject",{"_index":1016,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["injectable",{"_index":704,"title":{"injectables/SkyhookDndService.html":{}},"body":{"coverage.html":{},"overview.html":{},"additional-documentation/chess-tutorial.html":{}}}],["injectables",{"_index":705,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["injected",{"_index":1617,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["injection",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":845,"title":{},"body":{"index.html":{}}}],["input",{"_index":272,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["inputs",{"_index":328,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["inside",{"_index":310,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["inspired",{"_index":1030,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["installation",{"_index":825,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["installing",{"_index":1019,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["instance",{"_index":1017,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["instead",{"_index":363,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["instructions",{"_index":1085,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["interaction",{"_index":1058,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["interactions",{"_index":875,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":1189,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["interactivity",{"_index":273,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["interest",{"_index":1576,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["interested",{"_index":1393,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["interesting",{"_index":1464,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{}},"body":{"interfaces/DragSourceSpec.html":{},"coverage.html":{},"additional-documentation/chess-tutorial.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"index.html":{},"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["internally",{"_index":83,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["internals",{"_index":735,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["interpolate",{"_index":354,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["introducing",{"_index":1405,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["investigate",{"_index":1175,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["isblack",{"_index":1377,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["isdragging",{"_index":152,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["isdragging(monitor",{"_index":592,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["isdraggingobj",{"_index":1242,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["isdraggingplain",{"_index":1240,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["ish.ts",{"_index":690,"title":{},"body":{"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["isn't",{"_index":480,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["isover",{"_index":154,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["isover(options",{"_index":642,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["issue",{"_index":962,"title":{},"body":{"index.html":{}}}],["issues",{"_index":954,"title":{},"body":{"index.html":{}}}],["it's",{"_index":567,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["item",{"_index":252,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["item's",{"_index":685,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["items",{"_index":511,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["itemsource",{"_index":1601,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["itemsourcespec",{"_index":1590,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["itemtypes",{"_index":1475,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["itemtypes.knight",{"_index":1478,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["itself",{"_index":52,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["javascript",{"_index":565,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["job",{"_index":1185,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["jones",{"_index":1171,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["js",{"_index":533,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["jsx",{"_index":1648,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["kanban",{"_index":603,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["keep",{"_index":484,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["key",{"_index":558,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["keys",{"_index":1238,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["kinds",{"_index":1057,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["knight",{"_index":1254,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knight's",{"_index":1392,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightcomponent",{"_index":1260,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightposition",{"_index":1380,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightposition$|async",{"_index":1409,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knights",{"_index":1470,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightsource",{"_index":1483,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["know",{"_index":570,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["kp",{"_index":1430,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["laid",{"_index":1225,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["large",{"_index":1155,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["largely",{"_index":859,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["last",{"_index":495,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["lastly",{"_index":1563,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["later",{"_index":598,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["layer",{"_index":213,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["layers",{"_index":264,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{}}}],["lazy",{"_index":1011,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["leaked",{"_index":725,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["learn",{"_index":360,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["learnable",{"_index":1530,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["learning",{"_index":936,"title":{},"body":{"index.html":{}}}],["leave",{"_index":180,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["left",{"_index":353,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["let's",{"_index":1338,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lets",{"_index":211,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["level",{"_index":872,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1457,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["library",{"_index":926,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["license",{"_index":970,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":742,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["lifetime",{"_index":745,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["lifting",{"_index":1521,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lightgoldenrodyellow",{"_index":1217,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["lightweight",{"_index":1388,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["limitations",{"_index":197,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["limitedsupplyofpaper",{"_index":1093,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["line",{"_index":1290,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["linearly",{"_index":355,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["liners",{"_index":1096,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["lines",{"_index":1565,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["link",{"_index":515,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/translating-react-code.html":{}}}],["linked",{"_index":1322,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["links",{"_index":904,"title":{},"body":{"index.html":{}}}],["list",{"_index":396,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["listen",{"_index":75,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["listen()/subscribe",{"_index":84,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["listen(m",{"_index":171,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["listen(mapto",{"_index":118,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["lists",{"_index":602,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["literal",{"_index":643,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["little",{"_index":1486,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["live",{"_index":1277,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lives",{"_index":838,"title":{},"body":{"index.html":{}}}],["load",{"_index":1204,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["loaded",{"_index":1012,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["log",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":485,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["long",{"_index":1566,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["longer",{"_index":186,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["look",{"_index":1038,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["looking",{"_index":1136,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["looks",{"_index":1492,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["loops",{"_index":1340,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lot",{"_index":1036,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["lots",{"_index":709,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["lower",{"_index":871,"title":{},"body":{"index.html":{}}}],["luna",{"_index":914,"title":{},"body":{"index.html":{}}}],["m.candrop",{"_index":1551,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["m.candrop());what",{"_index":1224,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["m.isdragging",{"_index":172,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["m.isover",{"_index":1223,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["macos",{"_index":888,"title":{},"body":{"index.html":{}}}],["made",{"_index":418,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["maintain",{"_index":1145,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["maintaining",{"_index":946,"title":{},"body":{"index.html":{}}}],["maintains",{"_index":122,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["make",{"_index":236,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["makes",{"_index":1503,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["making",{"_index":615,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["managed",{"_index":1626,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mandated",{"_index":1583,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["manually",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["many",{"_index":189,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["map",{"_index":1549,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["mapto",{"_index":173,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["marker",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":350,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["matching",{"_index":32,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["math.abs(dx",{"_index":1436,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["math.abs(dy",{"_index":1437,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["math.floor(i",{"_index":1375,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["maximally",{"_index":866,"title":{},"body":{"index.html":{}}}],["maybe",{"_index":713,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["mcfly",{"_index":1172,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["mean",{"_index":1334,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["meaning",{"_index":877,"title":{},"body":{"index.html":{}}}],["means",{"_index":351,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["merging",{"_index":891,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":325,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["method",{"_index":17,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{}}}],["methods",{"_index":20,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["midflight",{"_index":203,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["minimal",{"_index":569,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["miscellaneous",{"_index":978,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":972,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":1046,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["mode",{"_index":1023,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["model",{"_index":444,"title":{},"body":{"interfaces/DragSource.html":{}}}],["modern",{"_index":1347,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["modify",{"_index":589,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["module",{"_index":695,"title":{"modules/SkyhookDndModule.html":{}},"body":{"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["module's",{"_index":1293,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["modules",{"_index":696,"title":{"modules.html":{}},"body":{"modules/SkyhookDndModule.html":{},"modules.html":{},"additional-documentation/quickstart.html":{}}}],["modulewithproviders",{"_index":703,"title":{},"body":{"modules/SkyhookDndModule.html":{}}}],["moment",{"_index":1446,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["monitor",{"_index":106,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.candrop",{"_index":157,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["monitor.diddrop",{"_index":1098,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.getdropresult",{"_index":547,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["monitor.getitem",{"_index":534,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["monitor.isdragging",{"_index":153,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.isover",{"_index":155,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["monitor.ts",{"_index":309,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"coverage.html":{}}}],["monitorbase",{"_index":311,"title":{"interfaces/MonitorBase.html":{}},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["monitoring",{"_index":1117,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["monitors",{"_index":1228,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["moot",{"_index":1631,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["more",{"_index":285,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["mounted",{"_index":609,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["mouse",{"_index":222,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["movable",{"_index":883,"title":{},"body":{"index.html":{}}}],["move",{"_index":514,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["moved",{"_index":229,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["moveknight",{"_index":1456,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["moveknight(to",{"_index":1399,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["moves",{"_index":230,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["moving",{"_index":600,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["much",{"_index":1415,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["multi",{"_index":10,"title":{},"body":{"interfaces/AddSubscription.html":{},"additional-documentation/quickstart.html":{}}}],["multibackend",{"_index":43,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["multibackend(html5totouch",{"_index":1064,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["multiple",{"_index":1621,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mutable",{"_index":921,"title":{},"body":{"index.html":{}}}],["mutate",{"_index":833,"title":{},"body":{"index.html":{}}}],["mybackend",{"_index":1079,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["mycomponent",{"_index":1597,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mydraggeditemtype",{"_index":543,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["mydropresult",{"_index":554,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["name",{"_index":27,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["neat",{"_index":1140,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["necessarily",{"_index":924,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":208,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{}}}],["need",{"_index":39,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["nested",{"_index":502,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["never",{"_index":1235,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["new",{"_index":102,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["next",{"_index":364,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ng",{"_index":1313,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ng2",{"_index":932,"title":{},"body":{"index.html":{}}}],["ngfor",{"_index":1164,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngif",{"_index":161,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngif=\"aaa",{"_index":1412,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngmodule",{"_index":1006,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["ngonchanges",{"_index":443,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["ngondestroy",{"_index":177,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["ngoninit",{"_index":442,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngrx",{"_index":1389,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngrx/store",{"_index":665,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["ngstyle",{"_index":1307,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngswitch",{"_index":254,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["ngzone.run",{"_index":619,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["noble",{"_index":1422,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["node",{"_index":199,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{}}}],["nodes",{"_index":905,"title":{},"body":{"index.html":{}}}],["nohtml5preview",{"_index":463,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["non",{"_index":635,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["none",{"_index":516,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notable",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["notation",{"_index":1633,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["note",{"_index":478,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["nothing",{"_index":657,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notice",{"_index":1332,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["noticed",{"_index":1056,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["notified",{"_index":128,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notifies",{"_index":586,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["notifying",{"_index":739,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["now",{"_index":247,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["null",{"_index":169,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["number",{"_index":339,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["o",{"_index":121,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["object",{"_index":332,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["objects",{"_index":143,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["observable",{"_index":174,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["observable.combinelatest",{"_index":1643,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["observable.map",{"_index":131,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["observables",{"_index":1545,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["observe",{"_index":1544,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["obvious",{"_index":1529,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["occur",{"_index":367,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["offer",{"_index":1124,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["offers",{"_index":1035,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["offset",{"_index":345,"title":{"interfaces/Offset.html":{}},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["offsetx",{"_index":337,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["offsety",{"_index":338,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["once",{"_index":436,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["one",{"_index":132,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["ones",{"_index":1104,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["onload",{"_index":1205,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["onpush",{"_index":858,"title":{},"body":{"index.html":{}}}],["opacity",{"_index":372,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["operation",{"_index":313,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["operations",{"_index":1028,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["opposed",{"_index":650,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["optimisation",{"_index":1227,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["optimise",{"_index":1231,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["optimises",{"_index":1237,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["optimization",{"_index":134,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["option",{"_index":523,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["optional",{"_index":29,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{}}}],["optionally",{"_index":498,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["options",{"_index":331,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["optionshere",{"_index":1087,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["order",{"_index":1612,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["original",{"_index":383,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["originally",{"_index":1020,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["others",{"_index":822,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":315,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["out",{"_index":824,"title":{},"body":{"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["output",{"_index":135,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["outside",{"_index":493,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["over",{"_index":259,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["overall",{"_index":1198,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["overlay",{"_index":1546,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["overlaystyle",{"_index":1556,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["override",{"_index":594,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["overrides",{"_index":505,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["overview",{"_index":975,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":508,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["owner's",{"_index":476,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["package",{"_index":762,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["packages",{"_index":784,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["page",{"_index":261,"title":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["papercount",{"_index":1092,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["parameter",{"_index":542,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{}}}],["parent",{"_index":448,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["parentid",{"_index":445,"title":{},"body":{"interfaces/DragSource.html":{}}}],["part",{"_index":1040,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["particular",{"_index":395,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["particularly",{"_index":1249,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["parts",{"_index":1518,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["pass",{"_index":330,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["passed",{"_index":530,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["paste",{"_index":1608,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["pattern",{"_index":97,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{}}}],["patterns",{"_index":1655,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["paying",{"_index":1329,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["peer",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":255,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["perfectly",{"_index":1509,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["perform",{"_index":205,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{}}}],["performance",{"_index":612,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["pick",{"_index":568,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["picked",{"_index":1500,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["piece",{"_index":262,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["pieces",{"_index":884,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["pipe",{"_index":1212,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["pipeline",{"_index":913,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":1244,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["place",{"_index":587,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["placed",{"_index":1362,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["places",{"_index":664,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["placing",{"_index":1365,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["plain",{"_index":65,"title":{},"body":{"interfaces/BackendInput.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["planning",{"_index":287,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["play",{"_index":1276,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["players",{"_index":1501,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["plenty",{"_index":927,"title":{},"body":{"index.html":{}}}],["plural",{"_index":636,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["point",{"_index":1328,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["pointer",{"_index":644,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["poor",{"_index":1161,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["populated",{"_index":1669,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["posing",{"_index":1186,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["position",{"_index":250,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["possibile",{"_index":307,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["possible",{"_index":860,"title":{},"body":{"index.html":{}}}],["potential",{"_index":966,"title":{},"body":{"index.html":{}}}],["power",{"_index":940,"title":{},"body":{"index.html":{}}}],["powered",{"_index":823,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":931,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["practice",{"_index":283,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["precisely",{"_index":853,"title":{},"body":{"index.html":{}}}],["presents",{"_index":1578,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["preserves",{"_index":1513,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["pressed",{"_index":559,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["prevent",{"_index":536,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["preview",{"_index":195,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["previews",{"_index":291,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["previously",{"_index":432,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{}}}],["primary",{"_index":1614,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["private",{"_index":1524,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["probably",{"_index":159,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["problem",{"_index":961,"title":{},"body":{"index.html":{}}}],["problems",{"_index":1054,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["procedure",{"_index":1538,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["process",{"_index":1507,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["produced",{"_index":741,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["product",{"_index":1275,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["program",{"_index":908,"title":{},"body":{"index.html":{}}}],["progress",{"_index":314,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["project",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["projected",{"_index":687,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["properties",{"_index":61,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["property",{"_index":438,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["props",{"_index":1591,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["props.someproperty",{"_index":1593,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["props.type",{"_index":1658,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["prospective",{"_index":1426,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["provide",{"_index":86,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["provides",{"_index":289,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["providing",{"_index":37,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{}}}],["public",{"_index":726,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["publish",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["pulls",{"_index":280,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["purely",{"_index":270,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["put",{"_index":572,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["queries",{"_index":582,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{}}}],["query",{"_index":910,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["quick",{"_index":1588,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["quickstart",{"_index":828,"title":{"additional-documentation/quickstart.html":{}},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["quite",{"_index":930,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["rapidly",{"_index":1229,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["rare",{"_index":378,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["rarely",{"_index":374,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["re",{"_index":850,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["react",{"_index":147,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["react.component",{"_index":1598,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["react/react",{"_index":1607,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["read",{"_index":304,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["reading",{"_index":1258,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["real",{"_index":1113,"title":{},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["really",{"_index":1333,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rears",{"_index":1068,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["reasons",{"_index":613,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["received",{"_index":660,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["recent",{"_index":1397,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["recognises",{"_index":552,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["recommended",{"_index":1154,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["recorded",{"_index":496,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["rectangle",{"_index":1169,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["red",{"_index":1536,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["reduce",{"_index":257,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["redundant",{"_index":1406,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["refer",{"_index":399,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["reference",{"_index":139,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["refers",{"_index":1101,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["reflected",{"_index":373,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["registered",{"_index":740,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["registers",{"_index":1026,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["regular",{"_index":1103,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["related",{"_index":394,"title":{},"body":{"interfaces/DragSource.html":{},"index.html":{}}}],["relative",{"_index":346,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["released",{"_index":971,"title":{},"body":{"index.html":{}}}],["relevant",{"_index":324,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["remember",{"_index":1118,"title":{},"body":{"additional-documentation/guide.html":{}}}],["reminded",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":1418,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["renamed",{"_index":1646,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["renaming",{"_index":1072,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["render",{"_index":219,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["rendered",{"_index":227,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["rendering",{"_index":192,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["renders",{"_index":1339,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["repeat(8",{"_index":1353,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replace",{"_index":1516,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replacing",{"_index":1444,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replay",{"_index":1396,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replicate",{"_index":487,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["represent",{"_index":72,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["representing",{"_index":494,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["represents",{"_index":7,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{}}}],["require",{"_index":95,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["required",{"_index":564,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["requires",{"_index":1061,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resolve",{"_index":1110,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resolving",{"_index":1082,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resorting",{"_index":384,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["respectively",{"_index":1032,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["respond",{"_index":1116,"title":{},"body":{"additional-documentation/guide.html":{}}}],["responsible",{"_index":1261,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rest",{"_index":1667,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["result",{"_index":31,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["result.dropeffect",{"_index":556,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["resulting",{"_index":1210,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["results",{"_index":33,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["resurrected",{"_index":599,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["retain",{"_index":59,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["return",{"_index":56,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["returned",{"_index":112,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["returning",{"_index":499,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["returns",{"_index":30,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["reusable",{"_index":691,"title":{},"body":{"interfaces/Offset.html":{}}}],["reuse",{"_index":275,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["rgba(0,0,0,0",{"_index":1560,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["right",{"_index":356,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["root",{"_index":688,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{}}}],["rows",{"_index":1355,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ruin",{"_index":1510,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rules",{"_index":885,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["run",{"_index":1206,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["runs",{"_index":110,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["rxjs",{"_index":8,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"dependencies.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["rxjs/operators",{"_index":1550,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sake",{"_index":1357,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["same",{"_index":23,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["sane",{"_index":1031,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["save",{"_index":1209,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["scalars",{"_index":141,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["scope",{"_index":789,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["scoped",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["screen",{"_index":1192,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["screenshot",{"_index":200,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["screenshotting",{"_index":366,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["seamlessly",{"_index":1055,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["seconds",{"_index":893,"title":{},"body":{"index.html":{}}}],["section",{"_index":1294,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["see",{"_index":62,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["seem",{"_index":1458,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["seen",{"_index":1532,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["selecting",{"_index":1194,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["selector",{"_index":326,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sense",{"_index":1336,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sensible",{"_index":376,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["separate",{"_index":266,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["separated",{"_index":1447,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["serves",{"_index":1473,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["service",{"_index":1401,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["set",{"_index":377,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["setdroptargettype(t",{"_index":637,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["setting",{"_index":465,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["settype",{"_index":403,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["settype(type",{"_index":427,"title":{},"body":{"interfaces/DragSource.html":{}}}],["settype/settypes",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settypes",{"_index":624,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["settypes(type",{"_index":626,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["shallow",{"_index":647,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["shallowequal",{"_index":142,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["shortcut",{"_index":464,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["shorthand",{"_index":1095,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["shouldn't",{"_index":614,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{}}}],["show",{"_index":1108,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["showoverlay",{"_index":1552,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["shows",{"_index":520,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["sick",{"_index":945,"title":{},"body":{"index.html":{}}}],["sidebar",{"_index":1042,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["similar",{"_index":596,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["simple",{"_index":486,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["simpler",{"_index":661,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["simply",{"_index":256,"title":{},"body":{"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["simulate",{"_index":424,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["single",{"_index":1157,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["situations",{"_index":1144,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["sixtyfour",{"_index":1341,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["size",{"_index":1288,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sized",{"_index":1160,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["sizes",{"_index":349,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["skyhook",{"_index":788,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["skyhook's",{"_index":1586,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["skyhook/core",{"_index":718,"title":{},"body":{"injectables/SkyhookDndService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["skyhook/multi",{"_index":47,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["skyhook/sortable",{"_index":831,"title":{},"body":{"index.html":{}}}],["skyhook](https://github.com/angular",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["skyhookdndmodule",{"_index":42,"title":{"modules/SkyhookDndModule.html":{}},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"modules/SkyhookDndModule.html":{},"modules.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["skyhookdndmodule.forroot",{"_index":49,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["skyhookdndservice",{"_index":82,"title":{"injectables/SkyhookDndService.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["skyhookdndservice#draglayer",{"_index":1123,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["skyhookdndservice#dragsource",{"_index":1120,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["skyhookdndservice#droptarget",{"_index":1122,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["skyhookdndservice.draglayer",{"_index":235,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["skyhookdndservice.dragsource",{"_index":1587,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["slightly",{"_index":1487,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["small",{"_index":133,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["smaller",{"_index":1188,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["smart",{"_index":267,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["solid",{"_index":1351,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["solution",{"_index":1404,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["solutions",{"_index":868,"title":{},"body":{"index.html":{}}}],["solve",{"_index":1053,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["somebackend",{"_index":1086,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["somedragsourceconnection.connectdragpreview(img",{"_index":1207,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["someimaginarybackendwithnamedexports",{"_index":1073,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["someone",{"_index":1531,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["someproperty",{"_index":1592,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["something",{"_index":242,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sometimes",{"_index":204,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["somewhere",{"_index":281,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sortable",{"_index":920,"title":{},"body":{"index.html":{}}}],["source",{"_index":226,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["source's",{"_index":663,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["sources",{"_index":578,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["space",{"_index":1317,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["span",{"_index":1281,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["spec",{"_index":100,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["spec.hover",{"_index":108,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["spec.hover(monitor",{"_index":109,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["special",{"_index":214,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["specific",{"_index":876,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["specification.ts",{"_index":529,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{}}}],["specifics",{"_index":1043,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["specified",{"_index":93,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["specifies",{"_index":344,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["specify",{"_index":322,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{}}}],["specifying",{"_index":519,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["specs",{"_index":1091,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["spirit",{"_index":1534,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["spot",{"_index":228,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["square",{"_index":1265,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squarecomponent",{"_index":1262,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squarecomponents",{"_index":1448,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squares",{"_index":1268,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["src/.../tokens.ts",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../type",{"_index":986,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../wrappers.ts",{"_index":982,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/connection",{"_index":69,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{}}}],["src/connector.service.ts",{"_index":5,"title":{},"body":{"interfaces/AddSubscription.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{}}}],["src/connectors.ts",{"_index":333,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"coverage.html":{}}}],["src/dnd.directive.ts",{"_index":320,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"coverage.html":{}}}],["src/dnd.module.ts",{"_index":35,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"modules/SkyhookDndModule.html":{},"coverage.html":{}}}],["src/drag",{"_index":528,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"coverage.html":{}}}],["src/drop",{"_index":651,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"coverage.html":{}}}],["src/layer",{"_index":308,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"coverage.html":{}}}],["src/monitor",{"_index":669,"title":{},"body":{"interfaces/MonitorBase.html":{},"coverage.html":{}}}],["src/source",{"_index":471,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"coverage.html":{}}}],["src/target",{"_index":640,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"coverage.html":{}}}],["src/tokens.ts",{"_index":802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/type",{"_index":689,"title":{},"body":{"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/wrappers.ts",{"_index":987,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stage",{"_index":1506,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["stamping",{"_index":889,"title":{},"body":{"index.html":{}}}],["standard",{"_index":13,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["start",{"_index":225,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["started",{"_index":245,"title":{"changelog.html":{},"index.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{}}}],["starts",{"_index":362,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["state",{"_index":126,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["statements",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":699,"title":{},"body":{"modules/SkyhookDndModule.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["statically",{"_index":1083,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["stationary",{"_index":1493,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["step",{"_index":1463,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["steps",{"_index":1037,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["still",{"_index":1363,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["store",{"_index":1127,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["strange",{"_index":1138,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["strategy",{"_index":1451,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["strictly",{"_index":648,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"index.html":{}}}],["string",{"_index":428,"title":{},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["strings",{"_index":1661,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["string|symbol",{"_index":1664,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["strong",{"_index":540,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["structure",{"_index":1162,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["struggle",{"_index":949,"title":{},"body":{"index.html":{}}}],["style",{"_index":148,"title":{},"body":{"interfaces/ConnectionBase.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["styles",{"_index":1284,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["styling",{"_index":370,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["sub",{"_index":830,"title":{},"body":{"index.html":{}}}],["subj",{"_index":101,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subj.next",{"_index":107,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subject",{"_index":103,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["subs",{"_index":1149,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["subscribe",{"_index":170,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscribe(callback",{"_index":116,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subscriber",{"_index":215,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["subscribers",{"_index":1398,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["subscribes",{"_index":1639,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["subscribing",{"_index":392,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscription",{"_index":9,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscription#add",{"_index":24,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["subscription.add",{"_index":78,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subscription.add(conn",{"_index":1147,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["subscriptionlike",{"_index":14,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{}}}],["subscriptions",{"_index":163,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["successful",{"_index":1455,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["such",{"_index":379,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["suffice",{"_index":194,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["sufficient",{"_index":584,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["sufficiently",{"_index":1105,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["superpowers",{"_index":925,"title":{},"body":{"index.html":{}}}],["supplied",{"_index":279,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"miscellaneous/variables.html":{}}}],["supplies",{"_index":1637,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["supply",{"_index":1657,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["support",{"_index":387,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["supports",{"_index":719,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["sure",{"_index":237,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["switch",{"_index":782,"title":{},"body":{"changelog.html":{},"additional-documentation/quickstart.html":{}}}],["symbol",{"_index":429,"title":{},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["symbols",{"_index":1663,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["syntax",{"_index":1021,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["t",{"_index":638,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["table",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":1298,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["take",{"_index":855,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["target",{"_index":446,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["targets",{"_index":497,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["taste",{"_index":941,"title":{},"body":{"index.html":{}}}],["tear",{"_index":1128,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["teardown",{"_index":117,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["teardownlogic",{"_index":22,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{}}}],["technically",{"_index":607,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["tedious",{"_index":710,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["tell",{"_index":1489,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["template",{"_index":165,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["template's",{"_index":1649,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["templates",{"_index":836,"title":{},"body":{"index.html":{}}}],["tempted",{"_index":571,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ten",{"_index":1143,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["terms",{"_index":1644,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["test",{"_index":492,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["testing",{"_index":426,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["text",{"_index":1195,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["that's",{"_index":398,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/quickstart.html":{}}}],["there's",{"_index":952,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":1630,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["thing",{"_index":951,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["things",{"_index":870,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["think",{"_index":955,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["this.black",{"_index":1303,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.cat.id",{"_index":1130,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.collected$.pipe(map(c",{"_index":1553,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.collected$.pipe(map(coll",{"_index":1557,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.currentposition",{"_index":1429,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.destroy",{"_index":721,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["this.destroy.add(xxx.subscribe",{"_index":715,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["this.destroy.unsubscribe",{"_index":722,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["this.dnd.dragsource",{"_index":544,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.dragsource(\"cat",{"_index":1129,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.dragsource(\"dragme",{"_index":1170,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["this.dnd.dragsource(\"paper",{"_index":1094,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.dnd.dragsource(itemtypes.knight",{"_index":1484,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.dnd.dragsource(null",{"_index":447,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.dnd.droptarget",{"_index":555,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{}}}],["this.dnd.droptarget(\"cat",{"_index":1218,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["this.dnd.droptarget(\"dragme",{"_index":1178,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["this.dnd.droptarget([\"cat",{"_index":1131,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.droptarget(itemtypes.knight",{"_index":1517,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.fireaction(monitor.getitem",{"_index":1603,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.game.canmoveknight(pos",{"_index":1440,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.canmoveknight(this.position",{"_index":1522,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.knightposition",{"_index":1402,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.moveknight(pos",{"_index":1421,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.moveknight(this.position",{"_index":1523,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.id",{"_index":545,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["this.itemsource.destroy",{"_index":1606,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.itemsource.listen(monitor",{"_index":1604,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.knightposition$.next(to",{"_index":1400,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightposition$.subscribe(kp",{"_index":1428,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.connectdragpreview(img",{"_index":1571,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.listen(monitor",{"_index":1496,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.unsubscribe",{"_index":1485,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.layer.unsubscribe",{"_index":1139,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.method",{"_index":1089,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.model.parentid.tostring",{"_index":454,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.notation",{"_index":1634,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.papercount",{"_index":1097,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.position",{"_index":1515,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.props",{"_index":1600,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.someproperty",{"_index":489,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/translating-react-code.html":{}}}],["this.source.connectdragpreview(img",{"_index":414,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.source.listen(m",{"_index":1241,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["this.source.settype(t",{"_index":459,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.source.unsubscribe",{"_index":1133,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs",{"_index":1150,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs.add(myservice.subscribe",{"_index":1151,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs.unsubscribe",{"_index":1153,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.target.listen(m",{"_index":1222,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["this.target.listen(monitor",{"_index":151,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["this.target.settype(\"parent_",{"_index":453,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.target.settype(this.type",{"_index":450,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.target.unsubscribe",{"_index":1134,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["those",{"_index":129,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["though",{"_index":606,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["three",{"_index":1119,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["through",{"_index":136,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["throw",{"_index":1419,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tick",{"_index":365,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["tie",{"_index":744,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["time",{"_index":296,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["timely",{"_index":299,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["times",{"_index":734,"title":{},"body":{"injectables/SkyhookDndService.html":{},"index.html":{}}}],["tiny",{"_index":1252,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tmonitor",{"_index":119,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["to.x",{"_index":1433,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["to.y",{"_index":1435,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["token",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["told",{"_index":449,"title":{},"body":{"interfaces/DragSource.html":{}}}],["tons",{"_index":864,"title":{},"body":{"index.html":{}}}],["tool",{"_index":902,"title":{},"body":{"index.html":{}}}],["toolkit",{"_index":817,"title":{},"body":{"index.html":{}}}],["top",{"_index":358,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["touch",{"_index":1004,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["touchbackend",{"_index":51,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["touching",{"_index":1193,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["traditional",{"_index":881,"title":{},"body":{"index.html":{}}}],["transit",{"_index":686,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["translate",{"_index":861,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["translated",{"_index":347,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["translating",{"_index":862,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["translation",{"_index":1255,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["transparent",{"_index":1498,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["trapped",{"_index":1384,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["trash",{"_index":887,"title":{},"body":{"index.html":{}}}],["trello.com",{"_index":898,"title":{},"body":{"index.html":{}}}],["trick",{"_index":1408,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["troubleshooting",{"_index":1065,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["true",{"_index":312,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["truth",{"_index":837,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["truthy",{"_index":1410,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["try",{"_index":573,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["tslib",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1452,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["turning",{"_index":1315,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tutorial",{"_index":829,"title":{"additional-documentation/chess-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["two",{"_index":531,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["type",{"_index":28,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["type(s",{"_index":1660,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["type(t",{"_index":458,"title":{},"body":{"interfaces/DragSource.html":{}}}],["type_dynamic",{"_index":806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":979,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":431,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["typeerror",{"_index":1066,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["typeortypearray",{"_index":627,"title":{},"body":{"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{}}}],["types",{"_index":99,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["types.ts",{"_index":70,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{}}}],["typescript",{"_index":535,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["typical",{"_index":1618,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["typically",{"_index":217,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["typing",{"_index":541,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["typo",{"_index":632,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["ui",{"_index":1190,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ultra",{"_index":1387,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["undefined",{"_index":1070,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["under",{"_index":248,"title":{},"body":{"interfaces/DragLayer.html":{},"changelog.html":{},"index.html":{}}}],["underlying",{"_index":1514,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["understand",{"_index":456,"title":{},"body":{"interfaces/DragSource.html":{}}}],["understandable",{"_index":1577,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["unicode",{"_index":1282,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["unidirectional",{"_index":839,"title":{},"body":{"index.html":{}}}],["unique",{"_index":1180,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["unlike",{"_index":1395,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["unmounted",{"_index":597,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["unsubscribe",{"_index":76,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["unsubscribed",{"_index":417,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["unsubscribing",{"_index":706,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["until",{"_index":111,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["unwanted",{"_index":1196,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["up",{"_index":503,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["update",{"_index":435,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/translating-react-code.html":{}}}],["updated",{"_index":300,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["updates",{"_index":1232,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["upgrade",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":1568,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["urls",{"_index":1570,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["usable",{"_index":1248,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["use",{"_index":36,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["used",{"_index":218,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["useful",{"_index":79,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["user",{"_index":525,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{}}}],["users",{"_index":948,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["uses",{"_index":900,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["using",{"_index":210,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["usually",{"_index":405,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["valid",{"_index":1535,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["value",{"_index":389,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["values",{"_index":923,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["vanish",{"_index":1467,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["variable",{"_index":166,"title":{},"body":{"interfaces/ConnectionBase.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["variables",{"_index":988,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variably",{"_index":1159,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["vector",{"_index":682,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["version",{"_index":11,"title":{},"body":{"interfaces/AddSubscription.html":{},"directives/DropTargetDirective.html":{},"changelog.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["vertical",{"_index":357,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["very",{"_index":481,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["via",{"_index":114,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["view",{"_index":1310,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["viewport",{"_index":681,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["visible",{"_index":835,"title":{},"body":{"index.html":{}}}],["visual",{"_index":912,"title":{},"body":{"index.html":{}}}],["visuals",{"_index":271,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["void",{"_index":120,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{}}}],["voil",{"_index":1441,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["vs",{"_index":1102,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["vue",{"_index":953,"title":{},"body":{"index.html":{}}}],["wait",{"_index":1203,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["want",{"_index":160,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wanting",{"_index":939,"title":{},"body":{"index.html":{}}}],["warned",{"_index":937,"title":{},"body":{"index.html":{}}}],["watching",{"_index":947,"title":{},"body":{"index.html":{}}}],["way",{"_index":1013,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["ways",{"_index":1146,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["we'll",{"_index":1279,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["we're",{"_index":1141,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["wealth",{"_index":960,"title":{},"body":{"index.html":{}}}],["web",{"_index":1574,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["weight",{"_index":1286,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["weird",{"_index":1460,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["well",{"_index":1005,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["what's",{"_index":1479,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whatever",{"_index":1297,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whether",{"_index":241,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["white",{"_index":1264,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whole",{"_index":778,"title":{},"body":{"changelog.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["width",{"_index":1325,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["wish",{"_index":439,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["within",{"_index":1177,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["without",{"_index":90,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["won't",{"_index":390,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["work",{"_index":380,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["works",{"_index":846,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["worth",{"_index":1257,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["wrap",{"_index":1345,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wrapper",{"_index":1512,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wrapper(dndservice",{"_index":98,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["wrappers",{"_index":81,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["wrapping",{"_index":1348,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["write",{"_index":457,"title":{},"body":{"interfaces/DragSource.html":{}}}],["writing",{"_index":80,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["written",{"_index":865,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["x",{"_index":693,"title":{},"body":{"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["x,y",{"_index":680,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["xxx",{"_index":1022,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["xy",{"_index":692,"title":{},"body":{"interfaces/Offset.html":{}}}],["xy(i",{"_index":1373,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["y",{"_index":694,"title":{},"body":{"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["yarn",{"_index":826,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["yellow",{"_index":1561,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["yes",{"_index":421,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{}}}],["you'd",{"_index":1480,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you'll",{"_index":1331,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you're",{"_index":209,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["you've",{"_index":1499,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["yourself",{"_index":212,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["zebra",{"_index":1132,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["zindex",{"_index":1562,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["zone",{"_index":849,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":815,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddSubscription.html":{"url":"interfaces/AddSubscription.html","title":"interface - AddSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddSubscription\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connector.service.ts\n        \n\n            \n                Description\n            \n            \n                Represents an RxJS Subscription, with multi-version compatibility.\nThe standard SubscriptionLike does not contain an add() method.\n\n            \n\n            \n                Extends\n            \n            \n                    SubscriptionLike\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(teardownLogic: TeardownLogic)\n                    \n                \n\n\n\n\n                \n                    \n                            Same as RxJS Subscription#add \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teardownLogic\n                                                        \n                                                                    TeardownLogic\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     AddSubscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendFactoryInput.html":{"url":"interfaces/BackendFactoryInput.html","title":"interface - BackendFactoryInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BackendFactoryInput\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n            \n                Description\n            \n            \n                Use this for providing backends that need configuring before use to SkyhookDndModule.\nFor use with the MultiBackend:\n * import { createDefaultMultiBackend } from '@angular-skyhook/multi-backend';\n * // ...\n * SkyhookDndModule.forRoot({ backendFactory: createDefaultMultiBackend })\n *or with the TouchBackend by itself:\n * export function createTouchBackend() {\n *     return TouchBackend({ enableMouseEvents: false });\n * }\n * // ...\n * SkyhookDndModule.forRoot({ backendFactory: createTouchBackend })\n *You have to do this to retain AOT compatibility.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        backendFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backendFactory\n                                    \n                                \n                                \n                                    \n                                        backendFactory:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    See above. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendInput.html":{"url":"interfaces/BackendInput.html","title":"interface - BackendInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BackendInput\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n            \n                Description\n            \n            \n                Use this for providing plain backends to SkyhookDndModule. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        backend\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backend\n                                    \n                                \n                                \n                                    \n                                        backend:     BackendFactory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BackendFactory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A plain backend, for example the HTML5Backend. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConnectionBase.html":{"url":"interfaces/ConnectionBase.html","title":"interface - ConnectionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConnectionBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                A base type to represent a DOM connection.\n\n            \n\n            \n                Extends\n            \n            \n                    SubscriptionLike\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                                \n                                    listen\n                                \n                                \n                                    unsubscribe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(teardown: TeardownLogic)\n                    \n                \n\n\n\n\n                \n                    \n                            Same as RxJS Subscription.add().\nUseful, for example, for writing wrappers for the SkyhookDndService methods,\nwhich might internally listen()/subscribe to DropTargetSpec and provide\na convenient callback after you hover without dropping or exiting for a specified\nduration. That would require the following pattern:\nfunction wrapper(dndService, types, spec, callback) {\n    let subj = new Subject();\n    let dt = dndService.dropTarget(types, {\n        ...spec,\n        hover: monitor => {\n            subj.next();\n            spec.hover && spec.hover(monitor);\n        }\n    });\n    // runs the callback until the returned connection\n    // is destroyed via unsubscribe()\n    dt.add(subj.pipe( ... ).subscribe(callback))\n    return dt;\n}\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teardown\n                                                        \n                                                                    TeardownLogic\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listen\n                            \n                            \n                        \n                    \n                \n                \n                    \nlisten(mapTo: (monitor: TMonitor) => void)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        O\n                                \n                            \n                        \n\n                \n                    \n                            A connection maintains a subscription to dnd-core's drag state\nchanges. This function is how you are notified of those changes.\nThis function is essentially RxJS Observable.map with one small\noptimization: it runs the output of\nthe function you provide through distinctUntilChanged, and checks\nreference equality (===) for scalars and shallowEqual for Objects.\nBecause of #2, you can happily emulate react-dnd-style code like:\ncollected$ = this.target.listen(monitor => ({\n  isDragging: monitor.isDragging(),\n  isOver: monitor.isOver(),\n  canDrop: monitor.canDrop(),\n}));... in which case you probably want to use the *ngIf as pattern for\n  grouping subscriptions into one bound template variable:\n\n  {{c.isDragging ? 'dragging': null}}\n  ...\nYou can also subscribe one-by-one, with isDragging$ = listen(m => m.isDragging()).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapTo\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unsubscribe\n                            \n                            \n                        \n                    \n                \n                \n                    \nunsubscribe()\n                    \n                \n\n\n\n\n                \n                    \n                            This method MUST be called, however you choose to, when ngOnDestroy() fires.\nIf you don't, you will leave subscriptions hanging around that will fire\ncallbacks on components that no longer exist.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragLayer.html":{"url":"interfaces/DragLayer.html","title":"interface - DragLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragLayer\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                For many use cases, the default rendering of the HTML5 backend should suffice.\nHowever, its drag preview has certain limitations. For example, it has to be an\nexisting node screenshot or an image, and it cannot change midflight.\nSometimes you might want to perform the custom rendering. This also becomes\nnecessary if you're using a custom backend. DragLayer lets you perform the\nrendering of the drag preview yourself.\nA drag layer is a special subscriber to the global drag state. It is called\na 'layer', not just a subscriber, because it is typically used to render custom\nelements that follow the mouse, above all other elements. The data flows like\nso:\ndrag start => global state => drag source => no preview\n                              => drag layer  => preview rendered on the spot\ndrag moved => global state => drag layer  => preview moves\ndrag ends  => global state => drag layer  => preview erasedTo use a drag layer as designed:\n\nCreate a drag layer: SkyhookDndService.dragLayer. Make sure to unsubscribe from\nit in ngOnDestroy().\n\nListen to global drag state changes with DragLayer.listen. These are all available on DragLayerMonitor:\nwhether something is being dragged, what type it is, where the drag started, where the dragged element is now.\n\nIf dragging, render a custom preview under the current mouse position,\ndepending on the item type, in a position: fixed 'layer'. You may like to\nuse an *ngSwitch on the type, rather than one drag layer per type, simply\nto reduce code duplication.\n\n\nYou can see an example of a drag layer over on the Examples page.\nOne piece of advice for using drag layers effectively is to separate 'smart' and\n'dumb' components. If you have one component purely for visuals, which does all\ninput through @Input() and all interactivity through @Output() events, then\nyou can reuse it to display a drag preview based on either data in the item from\nDragSourceSpec.beginDrag, or supplied by a 'smart' component which pulls\ndata from somewhere else using only an id. This practice is even more\nimportant if you are using, or planning on using, anything other than the HTML5\nbackend, because no other backend provides automatic previews. In those cases\nyou must handle every draggable type in a drag layer to have any previews at\nall.\nOr, you could just use @angular-skyhook/multi-backend.\n\n            \n\n            \n                Extends\n            \n            \n                    ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    listen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            listen\n                            \n                            \n                        \n                    \n                \n                \n                    \nlisten(mapTo: (monitor: DragLayerMonitor) => void)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        O\n                                \n                            \n                        \n\n                \n                    \n                            For listen functions in general, see ConnectionBase.\nThis listen function is called any time the global drag state\nchanges, including the coordinate changes, so that your component can\nprovide a timely updated custom drag preview. You can ask the monitor for\nthe client coordinates of the dragged item. Read the DragLayerMonitor\ndocs to see all the different possibile coordinates you might subscribe\nto.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapTo\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragLayerMonitor.html":{"url":"interfaces/DragLayerMonitor.html","title":"interface - DragLayerMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragLayerMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/layer-monitor.ts\n        \n\n            \n                Description\n            \n            \n                The monitor available inside DragLayer.\n\n            \n\n            \n                Extends\n            \n            \n                    MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDragging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDragging\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDragging()\n                    \n                \n\n\n\n\n                \n                    \n                            true if there is a drag operation in progress, false otherwise. \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragPreviewDirective.html":{"url":"directives/DragPreviewDirective.html","title":"directive - DragPreviewDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DragPreviewDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to specify which element a DragSource should screenshot as an HTML5 drag preview.\nOnly relevant when using the HTML5 backend.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dragPreview]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragPreview\n                            \n                            \n                                dragPreviewOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragPreview\n                    \n                \n                \n                    \n                        Type :     DragSource\n\n                    \n                \n                \n                    \n                        The drag source for which this element will be the preview. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragPreviewOptions\n                    \n                \n                \n                    \n                        Type :     DragPreviewOptions\n\n                    \n                \n                \n                    \n                        Pass an options object as you would to DragSource. \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragPreviewOptions.html":{"url":"interfaces/DragPreviewOptions.html","title":"interface - DragPreviewOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragPreviewOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connectors.ts\n        \n\n            \n                Description\n            \n            \n                Provide options for how to render a drag preview. See DragSource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        anchorX\n                                \n                                \n                                            Optional\n                                        anchorY\n                                \n                                \n                                            Optional\n                                        captureDraggingState\n                                \n                                \n                                            Optional\n                                        offsetX\n                                \n                                \n                                            Optional\n                                        offsetY\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anchorX\n                                    \n                                \n                                \n                                    \n                                        anchorX:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A number between 0 and 1. By default, 0.5. Specifies how the\noffset relative to the drag source node is translated into the the\nhorizontal offset of the drag preview when their sizes don't match.\n0 means \"dock the preview to the left\", 0.5 means \"interpolate linearly\"\nand 1 means \"dock the preview to the right\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        anchorY\n                                    \n                                \n                                \n                                    \n                                        anchorY:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A number between 0 and 1. By default, 0.5. Specifies how the\noffset relative to the drag source node is translated into the the\nvertical offset of the drag preview when their sizes don't match. 0 means\n\"dock the preview to the top, 0.5 means \"interpolate linearly\" and\n1 means \"dock the preview to the bottom.\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        captureDraggingState\n                                    \n                                \n                                \n                                    \n                                        captureDraggingState:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, false. If true, the component will learn that it is being\ndragged immediately as the drag starts instead of the next tick. This\nmeans that the screenshotting would occur with monitor.isDragging()\nalready being true, and if you apply any styling like a decreased opacity\nto the dragged element, this styling will also be reflected on the\nscreenshot. This is rarely desirable, so false is a sensible default.\nHowever, you might want to set it to true in rare cases, such as if you\nwant to make the custom drag layers work in IE and you need to hide the\noriginal element without resorting to an empty drag preview which IE\ndoesn't support.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetX\n                                    \n                                \n                                \n                                    \n                                        offsetX:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, null. Specifies the vertical offset between the cursor and\nthe drag preview element. If offsetX has a value, anchorX won't be\nused.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetY\n                                    \n                                \n                                \n                                    \n                                        offsetY:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, null. Specifies the vertical offset between the cursor and\nthe drag preview element. If offsetY has a value, anchorY won't be\nused.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSource.html":{"url":"interfaces/DragSource.html","title":"interface - DragSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSource\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                Like DropTarget, it can be used just for subscribing to\ndrag state information related to a particular item type or list of types.\nYou do not have to connect it to a DOM element if that's all you want.\nTo create one, refer to SkyhookDndService.\n\n            \n\n            \n                Extends\n            \n            \n                    ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectDragPreview\n                                \n                                \n                                    connectDragSource\n                                \n                                \n                                    getHandlerId\n                                \n                                \n                                    setType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectDragPreview\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectDragPreview(elementOrNode: Node, options?: DragPreviewOptions)\n                    \n                \n\n\n\n\n                \n                    \n                            This function allows you to connect a DOM node to your DragSource as a preview.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nYou might use an ElementRef.nativeElement, or even an\nImage.\nconst img = new Image();\nimg.onload = this.source.connectDragPreview(img);\nimg.src = '...';The subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DragSource already has a type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementOrNode\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    DragPreviewOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectDragSource\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectDragSource(elementOrNode: Node, options?: DragSourceOptions)\n                    \n                \n\n\n\n\n                \n                    \n                            This function allows you to connect a DOM node to your DragSource.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nThe subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DragSource already has a type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementOrNode\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    DragSourceOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHandlerId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHandlerId()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns the drag source ID that can be used to simulate the drag and drop events with the testing backend. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setType\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetType(type: string | symbol)\n                    \n                \n\n\n\n\n                \n                    \n                            Use this method to have a dynamically typed source. If no type has\npreviously been set, it creates the subscription and allows the\n[dragSource] DOM element to be connected. If you do not need to\ndynamically update the type, you can set it once via the\nDragSourceSpec property.\nIf you wish to have a dynamic type based on an @Input() property, for\nexample, you must call setType() in either of your component's\nngOnInit or ngOnChanges methods:\n@Input() type: string;\n@Input() model: { parentId: number; name: string; };\ntarget = this.dnd.dragSource(null, {\n  // ...\n});\nngOnChanges() {\n  // use what your parent component told you to\n  this.target.setType(this.type);\n  // or create groupings on the fly\n  this.target.setType(\"PARENT_\" + this.model.parentId.toString());\n}It may be more convenient or easier to understand if you write:\n@Input() set type(t) {\n  this.source.setType(t);\n}\nsource = this.dnd.dragSource(null, {\n  beginDrag: () => ({ ... })\n});\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string | symbol\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragSourceDirective.html":{"url":"directives/DragSourceDirective.html","title":"directive - DragSourceDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DragSourceDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to connect a DragSource to an element in a component template.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dragSource]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragSource\n                            \n                            \n                                dragSourceOptions\n                            \n                            \n                                dragSourceType\n                            \n                            \n                                noHTML5Preview\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragSource\n                    \n                \n                \n                    \n                        Type :     DragSource\n\n                    \n                \n                \n                    \n                        Which source to connect the DOM to \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragSourceOptions\n                    \n                \n                \n                    \n                        Type :     DragSourceOptions\n\n                    \n                \n                \n                    \n                        Pass an options object as you would to DragSource. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragSourceType\n                    \n                \n                \n                    \n                        Type :     string | symbol\n\n                    \n                \n                \n                    \n                        Shortcut for setting a type on the connection.\nLets you use Angular binding to do it. Runs DragSource. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        noHTML5Preview\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Do not render an HTML5 preview. Only applies when using the HTML5 backend.\nIt does not use { captureDraggingState: true } for IE11 support; that is broken.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceMonitor.html":{"url":"interfaces/DragSourceMonitor.html","title":"interface - DragSourceMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSourceMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/source-monitor.ts\n        \n\n            \n                Description\n            \n            \n                The monitor available in DragSource's listen method. \n\n            \n\n            \n                Extends\n            \n            \n                    MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canDrag\n                                \n                                \n                                    didDrop\n                                \n                                \n                                    getDropResult\n                                \n                                \n                                    isDragging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrag()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if NO drag operation is in progress, and the owner's\ncanDrag() returns true or is not defined.\nNote that canDrag doesn't blindly return what you supplied in\nDragSourceSpec, so it isn't very useful as a general\nsource-is-enabled/disabled flag.\nInstead, keep your canDrag logic simple, and replicate it in your template.\n content {\n  canDrag: () => this.someProperty\n}\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            didDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ndidDrop()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if some drop target handled the drop event; false\notherwise. Even if a target did not return a drop result, didDrop()\nreturns true. Use it inside endDrag() to test whether any drop target\nhas handled the drop. Returns false if called outside endDrag().\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDropResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDropResult()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns a plain object representing the last recorded drop result. The\ndrop targets may optionally specify it by returning an object from their\ndrop() methods. When a chain of drop() is dispatched for the nested\ntargets, bottom up, any parent that explicitly returns its own result from\ndrop() overrides the child drop result previously set by the child.\nReturns null if called outside endDrag().\n\n\n                            \n                                Returns :     DropResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDragging\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDragging()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if a drag operation is in progress, and either the owner\ninitiated the drag, or its isDragging() is defined and returns true.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceOptions.html":{"url":"interfaces/DragSourceOptions.html","title":"interface - DragSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSourceOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connectors.ts\n        \n\n            \n                Description\n            \n            \n                Provide customisations for how a backend should handle a DragSource and\ndisplay items dragged from it. See DragSource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dropEffect\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dropEffect\n                                    \n                                \n                                \n                                    \n                                        dropEffect:     \"copy\" | \"move\" | \"link\" | \"none\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"copy\" | \"move\" | \"link\" | \"none\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string. By default, 'move'. In the browsers that support this\nfeature, specifying 'copy' shows a special \"copying\" cursor, while 'move'\ncorresponds to the \"move\" cursor. You might want to use this option to\nprovide a hint to the user about whether an action is destructive.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceSpec.html":{"url":"interfaces/DragSourceSpec.html","title":"interface - DragSourceSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSourceSpec\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/drag-source-specification.ts\n        \n\n            \n                Description\n            \n            \n                The spec passed to SkyhookDndService.\nNote the two type parameters. Both must represent plain JS objects.\nItem is the type you return from beginDrag(), and available in monitor.getItem().\nLimitations in TypeScript may prevent inferring this in many circumstances,\nand it will default to {}. It is best if you are strong-typing to pass a\ntype parameter like so:\n * interface MyDraggedItemType { id: number; }\n * // ...\n * source = this.dnd.dragSource(..., {\n *     beginDrag: monitor => ({ id: this.id })\n * })\n *DropResult is the type you expect a drop target to return from drop().\nIt is the type of the object returned by monitor.getDropResult() during endDrag().\nNote that your backend may assign some extra properties. You should define a\nDropResult type that recognises these, such as:\n * interface HTML5DropResult { dropEffect: string; }\n * interface MyDropResult extends HTML5DropResult { id: number; }\n * target = this.dnd.dropTarget(..., {\n *     drop: monitor => ({ id: this.id })\n * });\n *\n * source = this.dnd.dragSource(..., {\n *     endDrag: monitor => {\n *         const result = monitor.getDropResult();\n *         if (result.dropEffect === 'copy') {\n *             // user had alt key pressed + the GreenPlus icon when they dropped,\n *             // so copy instead of move\n *         }\n *     }\n * });\n *\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    beginDrag\n                                \n                                \n                                        Optional\n                                    canDrag\n                                \n                                \n                                        Optional\n                                    endDrag\n                                \n                                \n                                        Optional\n                                    isDragging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            beginDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \nbeginDrag(monitor: DragSourceMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Required. When the dragging starts, beginDrag is called. You must return\na plain JavaScript object describing the data being dragged. What you\nreturn is the only information available to the drop targets about the\ndrag source so it's important to pick the minimal data they need to know.\nYou may be tempted to put a reference to the component into it, but you\nshould try very hard to avoid doing this because it couples the drag\nsources and drop targets. It's a good idea to return something like `{ id:\n\nthis.id }` from this method.\n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DragSourceMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Item\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            canDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrag(monitor: DragSourceMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Optional. Queries your component to determine whether this source can be\ndragged. Default returns true; this is often sufficient.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DragSourceMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            endDrag\n                            \n                            \n                        \n                    \n                \n                \n                    \nendDrag(monitor: DragSourceMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Optional. Notifies your component when dragging ends.\nThis is a good place to fire actions or modify a component. You will often\nwant to check DragSourceMonitor and DragSourceMonitor for more\ndetails.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DragSourceMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            isDragging\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDragging(monitor: DragSourceMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            By default, only the drag source that initiated the drag operation is\nconsidered to be dragging. You might override this by matching on the\nDragSourceMonitor.id and your component's id, or similar. Do this if the\noriginal component may be unmounted during the dragging and later\n\"resurrected\" with a different parent. For example, when moving a card\nacross the lists in a Kanban board, you want it to retain the dragged\nappearance—even though technically, the component gets unmounted and\na different one gets mounted every time you hover over another list.\nNote: You may not call DragSourceMonitor inside this method.\nNOTE: runs outside Angular change detection. This is for performance\nreasons. You shouldn't be making changes to your component here anyway. If\nyou do change your component inside this callback, it may not appear\nimmediately, and if you use NgZone.run() then you may experience\nperformance degradation.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DragSourceMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTarget.html":{"url":"interfaces/DropTarget.html","title":"interface - DropTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTarget\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                Represents one drop target and its behaviour, that can listen to the state\nand connect to a DOM element.\nTo create one, refer to SkyhookDndService.\n\n            \n\n            \n                Extends\n            \n            \n                    ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectDropTarget\n                                \n                                \n                                    getHandlerId\n                                \n                                \n                                    setTypes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectDropTarget\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectDropTarget(elementOrNode: Node)\n                    \n                \n\n\n\n\n                \n                    \n                            This function allows you to connect a DOM node to your DropTarget.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nThe subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DropTarget already has a type.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementOrNode\n                                                        \n                                                                    Node\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Subscription\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHandlerId\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHandlerId()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns the drop target ID that can be used to simulate the drag and drop events with the testing backend. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTypes(type: TypeOrTypeArray)\n                    \n                \n\n\n\n\n                \n                    \n                            Use this method to have a dynamically typed target. If no type has\npreviously been set, it creates the subscription and allows the\n[dragSource] DOM element to be connected. If you do not need to\ndynamically update the type, you can set it once via the\nDropTargetSpec property.\nSee DragSource for an example of how to set\na dynamic type, for it is very similar here.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    TypeOrTypeArray\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropTargetDirective.html":{"url":"directives/DropTargetDirective.html","title":"directive - DropTargetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropTargetDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to connect a DropTarget to an element in a component template.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dropTarget]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dropTarget\n                            \n                            \n                                dropTargetType\n                            \n                            \n                                dropTargetTypes\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dropTargetType\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dropTarget\n                    \n                \n                \n                    \n                        Type :     DropTarget\n\n                    \n                \n                \n                    \n                        Which target to connect the DOM to \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropTargetType\n                    \n                \n                \n                    \n                        Reduce typo confusion by allowing non-plural version of dropTargetTypes \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropTargetTypes\n                    \n                \n                \n                    \n                        Type :     TypeOrTypeArray\n\n                    \n                \n                \n                    \n                        Shortcut for setting a type on the connection.\nLets you use Angular binding to do it. Runs DropTarget. \n\n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dropTargetType\n                    \n                \n\n\n                \n                    \n                        setdropTargetType(t)\n                    \n                \n                    \n                        \n                                Reduce typo confusion by allowing non-plural version of dropTargetTypes \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetMonitor.html":{"url":"interfaces/DropTargetMonitor.html","title":"interface - DropTargetMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTargetMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/target-monitor.ts\n        \n\n            \n                Description\n            \n            \n                The monitor available in DropTarget's listen method. \n\n            \n\n            \n                Extends\n            \n            \n                    MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canDrop\n                                \n                                \n                                    didDrop\n                                \n                                \n                                    getDropResult\n                                \n                                \n                                    isOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrop()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if there is a drag operation in progress, and the owner's\ncanDrop() returns true or is not defined.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            didDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ndidDrop()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if some drop target has handled the drop event, false\notherwise. Even if a target did not return a drop result, didDrop()\nreturns true. Use it inside drop() to test whether any nested drop\ntarget has already handled the drop. Returns false if called outside\ndrop().\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDropResult\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDropResult()\n                    \n                \n\n\n\n\n                \n                    \n                            Returns a plain object representing the last recorded drop result. The\ndrop targets may optionally specify it by returning an object from their\ndrop() methods. When a chain of drop() is dispatched for the nested\ntargets, bottom up, any parent that explicitly returns its own result\nfrom drop() overrides the drop result previously set by the child.\nReturns null if called outside drop().\n\n\n                            \n                                Returns :     DropResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOver\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOver(options?: literal type)\n                    \n                \n\n\n\n\n                \n                    \n                            Returns true if there is a drag operation in progress, and the pointer\nis currently hovering over the owner. You may optionally pass\n{ shallow: true } to strictly check whether only the owner is being\nhovered, as opposed to a nested target.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetSpec.html":{"url":"interfaces/DropTargetSpec.html","title":"interface - DropTargetSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTargetSpec\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/drop-target-specification.ts\n        \n\n            \n                Description\n            \n            \n                The spec passed to SkyhookDndService.\nNote the two type parameters. Both must represent plain JS objects. See the extended\ndiscussion of these type parameters at DragSourceSpec.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    canDrop\n                                \n                                \n                                        Optional\n                                    drop\n                                \n                                \n                                        Optional\n                                    hover\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            canDrop\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanDrop(monitor: DropTargetMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Queries your component to determine whether an item can be dropped on this target.\nNOTE: runs outside Angular change detection. This is for performance\nreasons. You shouldn't be making changes to your component here anyway. If\nyou do change your component inside this callback, it may not appear\nimmediately, and if you use NgZone.run() then you may experience\nperformance degradation.\nDefault, when not specified, is true.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DropTargetMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            drop\n                            \n                            \n                        \n                    \n                \n                \n                    \ndrop(monitor: DropTargetMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Called when a compatible item is dropped on the target. You may either\nreturn nothing, or a plain object.\nIf you return an object, it is going to become the drop result and will be\navailable to the drag source in its DragSourceSpec method as\nDropTargetMonitor. This is useful in case you want the\nsource to perform different actions depending on which target received the\ndrop. Otherwise, it is simpler to handle the dropped item here.\nIf you have nested drop targets, you can test whether a nested target has\nalready handled drop by checking DropTargetMonitor. Both this\nmethod and the source's endDrag() method are good places to fire\n@ngrx/store actions.\nThis method will not be called if canDrop() is defined and returns false.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DropTargetMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DropResult | void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hover\n                            \n                            \n                        \n                    \n                \n                \n                    \nhover(monitor: DropTargetMonitor)\n                    \n                \n\n\n\n\n                \n                    \n                            Called frequently while the mouse hovers over the owner drop target while\ndragging a relevant item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        monitor\n                                                        \n                                                                    DropTargetMonitor\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonitorBase.html":{"url":"interfaces/MonitorBase.html","title":"interface - MonitorBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MonitorBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monitor-base.ts\n        \n\n            \n                Description\n            \n            \n                The methods common to all monitor classes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getClientOffset\n                                \n                                \n                                    getDifferenceFromInitialOffset\n                                \n                                \n                                    getInitialClientOffset\n                                \n                                \n                                    getInitialSourceClientOffset\n                                \n                                \n                                    getItem\n                                \n                                \n                                    getItemType\n                                \n                                \n                                    getSourceClientOffset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            The current mouse x,y position relative to the viewport. Returns null\nif no item is being dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDifferenceFromInitialOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDifferenceFromInitialOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            A vector x,y of the displacement of the dragged item from its initial\nposition. Returns null if no item is being dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInitialClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInitialClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            The initial mouse x,y position relative to the viewport, when the current\ndrag operation started. Returns null if no item is being dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInitialSourceClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInitialSourceClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            x,y relative to viewport of the item's DOM element before it was dragged.\nReturns null if no item is being dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItem\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItem()\n                    \n                \n\n\n\n\n                \n                    \n                            The item in transit, if any. This is what you returned from\nDragSourceSpec. Returns null if no item is being dragged. \n\n\n                            \n                                Returns :     Item | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemType\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemType()\n                    \n                \n\n\n\n\n                \n                    \n                            The type of the item in transit. Returns null if no item is being dragged. \n\n\n                            \n                                Returns :     string | symbol | null\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSourceClientOffset\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSourceClientOffset()\n                    \n                \n\n\n\n\n                \n                    \n                            The projected x,y position relative to viewport of the root DOM element of the drag source\n= its initial position + displacement. Returns null if no item is\nbeing dragged. \n\n\n                            \n                                Returns :     Offset | null\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Offset.html":{"url":"interfaces/Offset.html","title":"interface - Offset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Offset\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-ish.ts\n        \n\n            \n                Description\n            \n            \n                Just a plain, reusable xy coordinate type. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    x coordinate \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    y coordinate \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SkyhookDndModule.html":{"url":"modules/SkyhookDndModule.html","title":"module - SkyhookDndModule","body":"\n                   \n\n\n\n\n    Modules\n    SkyhookDndModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EXPORTS\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EXPORTS\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(backendOrBackendFactory: BackendInput | BackendFactoryInput)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        backendOrBackendFactory\n                                                        \n                                                                    BackendInput | BackendFactoryInput\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SkyhookDndService.html":{"url":"injectables/SkyhookDndService.html","title":"injectable - SkyhookDndService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SkyhookDndService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connector.service.ts\n        \n\n            \n                Description\n            \n            \n                For a simple component, unsubscribing is as easy as connection.unsubscribe() in ngOnDestroy()\nIf your components have lots of subscriptions, it can get tedious having to\nunsubscribe from all of them, and you might forget. A common pattern is to create an RxJS Subscription\n(maybe called destroy), to use this.destroy.add(xxx.subscribe(...))\nand to call destroy.unsubscribe() once to clean up all of them. @angular-skyhook/core\nsupports this pattern with by using the subscription parameter on the\nconstructors. Simply:\nimport { Subscription } from 'rxjs';\n// ...\ndestroy = new Subscription();\ntarget = this.dnd.dropTarget({\n  // ...\n}, this.destroy);\nngOnDestroy() { this.destroy.unsubscribe(); }It is a good habit for avoiding leaked subscriptions, because .\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dragLayer\n                            \n                            \n                                    Public\n                                dragSource\n                            \n                            \n                                    Public\n                                dropTarget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dragLayer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dragLayer(subscription?: AddSubscription)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        Item\n                                \n                            \n                        \n\n                \n                    \n                            This method creates a DragLayer object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscription\n                                                        \n                                                                    AddSubscription\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DragLayer\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dragSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dragSource(type: string | symbol | null, spec: DragSourceSpec, subscription?: AddSubscription)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        Item\n                                        DropResult\n                                \n                            \n                        \n\n                \n                    \n                            This method creates a DragSource object. It represents a drag\nsource and its behaviour, and can be connected to a DOM element by\nassigning it to the [dragSource] directive on that element in your\ntemplate.\nIt is the corollary of react-dnd's\nDragSource.\nThe spec argument (DragSourceSpec) is a set of queries and\ncallbacks that are called at appropriate times by the internals. The\nqueries are for asking your component whether to drag/listen and what\nitem data to hoist up; the callback (just 1) is for notifying you when\nthe drag ends.\nOnly the drop targets registered for the same type will\nreact to the items produced by this drag source. If you want a dynamic\ntype, pass null as the type; and call DragSource in\na lifecycle hook.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string | symbol | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        spec\n                                                        \n                                                                    DragSourceSpec\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        subscription\n                                                        \n                                                                    AddSubscription\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                An RxJS Subscription to tie the lifetime of the\nconnection to.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DragSource\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dropTarget\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dropTarget(types: TypeOrTypeArray | null, spec: DropTargetSpec, subscription?: AddSubscription)\n                    \n                \n\n\n\n                        \n                            \n                                Type parameters :\n                                \n                                        Item\n                                        DropResult\n                                \n                            \n                        \n\n                \n                    \n                            This drop target will only react to the items produced by the drag sources\nof the specified type or types.\nIf you want a dynamic type, pass null as the type; and call\nDropTarget in a lifecycle hook.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        types\n                                                        \n                                                                    TypeOrTypeArray | null\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        spec\n                                                        \n                                                                    DropTargetSpec\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        subscription\n                                                        \n                                                                    AddSubscription\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DropTarget\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n1.1.1 (2019-02-14)\nNote: Version bump only for package @angular-skyhook/core\n1.1.0 (2018-11-27)\nBug Fixes\n\nupgrade dnd-core and html5-backend dependencies (f5a19b8)\n\n\n1.0.11 (2018-09-11)\nBug Fixes\n\npublish dist directory instead of whole folder (50f7dc9)\n\n\n1.0.10 (2018-09-11)\nBug Fixes\n\npackage: switch to scoped packages, i.e. @skyhook/core (874723a)\nPublish under [@angular-skyhook](https://github.com/angular-skyhook)/* scope (d14b101)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            ConnectionBase\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            DragLayer\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            DragSource\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            DropTarget\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connector.service.ts\n            \n            injectable\n            SkyhookDndService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connector.service.ts\n            \n            interface\n            AddSubscription\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/connectors.ts\n            \n            interface\n            DragPreviewOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/connectors.ts\n            \n            interface\n            DragSourceOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            directive\n            DragPreviewDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            directive\n            DragSourceDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            directive\n            DropTargetDirective\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/dnd.module.ts\n            \n            interface\n            BackendFactoryInput\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/dnd.module.ts\n            \n            interface\n            BackendInput\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/drag-source-specification.ts\n            \n            interface\n            DragSourceSpec\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/drop-target-specification.ts\n            \n            interface\n            DropTargetSpec\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/layer-monitor.ts\n            \n            interface\n            DragLayerMonitor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/monitor-base.ts\n            \n            interface\n            MonitorBase\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/source-monitor.ts\n            \n            interface\n            DragSourceMonitor\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/target-monitor.ts\n            \n            interface\n            DropTargetMonitor\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_BACKEND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_MANAGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            TYPE_DYNAMIC\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/type-ish.ts\n            \n            interface\n            Offset\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            dnd-core : ^7.0.1\n        \n            tslib : ^1.9.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/core : >= 6.0.0\n        \n            rxjs : >= 6.0.0\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@angular-skyhook\n \n\n\n\nSkyhook is a toolkit for building complex drag and drop interfaces in\nAngular. It is based on, and very similar to react-dnd by Dan\nAbramov and others, and is also powered by dnd-core. It\nis compatible with all backends.\nCheck out the examples here.\nInstallation\nyarn add @angular-skyhook/core react-dnd-html5-backendNext, follow the Quickstart and check out the Tutorial.\nSub-packages\n\n@angular-skyhook/multi-backend\n@angular-skyhook/sortable\n\nFeatures\n\nMake any component draggable, or into a drop target.\nDoesn't mutate the DOM, and doesn't use classes and CSS to do 'callbacks'.\nEvery visible change is made through Angular templates.\nThe truth lives in JavaScript, with unidirectional data flow (like\n@ngrx/store)\nObservable APIs, designed to fit in Angular.\nTypeScript friendly, with strong typing for in-flight objects, and inline\ndocumentation.\nWorks with HTML5 drag and drop, and all other react-dnd backends.\n\nGoals\n\nHigh performance. All code runs outside the Angular zone, and\nre-enters in batches only where strictly necessary, such that change detection\nruns precisely as many times as you need it to, with no extra configuration.\nYou should also be able to take full advantage of OnPush change detection.\n\nLargely possible to translate react-dnd code and examples into Angular\n(see Translating React Code).\n\nComprehensive documentation and tons of example code, written in Angular\nstyle.\n\n\nWhat can you do with it?\nInstead of building maximally-ergonomic solutions to simple use cases,\nreact-dnd and @angular-skyhook provide an abstraction over most things you\ncould want to do with drag and drop. They are lower-level building blocks that\nmake it easy to implement some very complex interactions. They assign no\nspecific meaning to a drag/drop operation. You get to define what happens when\na drag starts or ends or hovers. Here are some ambitious examples:\n\nThe traditional react-dnd tutorial, a chess board with movable pieces and rules\nDeleting items by dragging them to a 'trash can', like in the macOS dock.\nStamping out a template by dragging the template into a work area\nMerging two items by dragging one on top of the other\nHover over a 'folder' for a few seconds to 'drill down' into it\nThe famous lists and cards on trello.com, which actually uses react-dnd\nA diagramming tool where you can draw links between nodes\nA 2D CAD program\nA graphical query builder, or visual data pipeline like Luna\nMany other demonstrations of react-dnd (most with GIFs) in use\n\nAlternatives\nIt is important to note that for bare-bones sortable lists, where you have\na mutable array of simple values, you don't necessarily need the superpowers in\nthis library. There are plenty of cookie-cutter solutions out there, like the\nquite powerful ng2-dnd or ng2-dragula, which may\nget you to your deadline faster than learning and using @angular-skyhook. But\nbe warned; you may find yourself wanting more dragging power once you get\na taste. In fact, this package was born when\n@cormacrelf got sick of maintaining\nng2-dragula and watching users struggle to implement what react-dnd was born\nfor.\nIf Angular and React aren't your thing, there's also vue-react-dnd.\nIssues\nNot all issues are @angular-skyhook-related. If you think you found a bug in\ndnd-core or with the HTML5 backend, those issues belong on that\ncodebase with their many contributors\nand wealth of experience. If there is a problem with another backend you are\nusing, file an issue with that backend so you can get more specific help and so\nthat the community can benefit.\nIssues and potential improvements to @angular-skyhook are discussed on\nGitHub.\nLicense\nThis library is released under the MIT license. It depends on dnd-core,\nwhich is (now) also under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SkyhookDndModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DragSourceDecorator   (src/.../wrappers.ts)\n                        \n                        \n                            DragSourceFactory   (src/.../wrappers.ts)\n                        \n                        \n                            DropTargetDecorator   (src/.../wrappers.ts)\n                        \n                        \n                            DropTargetFactory   (src/.../wrappers.ts)\n                        \n                        \n                            TypeOrTypeArray   (src/.../type-ish.ts)\n                        \n                        \n                            Types   (src/.../wrappers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/wrappers.ts\n    \n    \n        \n            \n                \n                    \n                    DragSourceDecorator\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DragSourceFactory\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DropTargetDecorator\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DropTargetFactory\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Types\n                \n            \n            \n                \n                        string | symbol | (string | symbol)[]\n\n                \n            \n        \n    \n    src/type-ish.ts\n    \n    \n        \n            \n                \n                    \n                    TypeOrTypeArray\n                \n            \n            \n                \n                    String, symbol, or an array of either. Used on drop targets. \n\n                \n            \n            \n                \n                        string | symbol | Array\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DRAG_DROP_BACKEND   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_MANAGER   (src/.../tokens.ts)\n                        \n                        \n                            TYPE_DYNAMIC   (src/.../tokens.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DRAG_DROP_BACKEND\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n    'dnd-core compatible backend'\n)\n                        \n                    \n\n                \n                    \n                        The injection token for the dnd-core compatible backend currently in use. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DRAG_DROP_MANAGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken>(\n    'dnd-core DragDropManager'\n)\n                        \n                    \n\n                \n                    \n                        The injection token for the dnd-core DragDropManager \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TYPE_DYNAMIC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol(\n    'no type specified, you must provide one with setType/setTypes'\n)\n                        \n                    \n\n                \n                    \n                        The type a source or target is given as a marker for 'you supplied null as a type',\nso that library consumers can be reminded to use setType/setTypes manually.\nSee DragSource, DropTarget.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/quickstart.html":{"url":"additional-documentation/quickstart.html","title":"additional-page - Quickstart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstallation\nyarn add @angular-skyhook/core react-dnd-html5-backendYou might consider @angular-skyhook/multi-backend instead of the HTML5\nbackend, because it allows adding touch support as well.\nThen import SkyhookDndModule and provide the backend:\nimport { SkyhookDndModule } from \"@angular-skyhook/core\";\nimport { default as HTML5Backend } from 'react-dnd-html5-backend'\n\n@NgModule({\n  imports: [\n    // Don't forget the forRoot()\n    SkyhookDndModule.forRoot({ backend: HTML5Backend }),\n  ]\n})\nexport class AppModule {}If you need it again on a child module, like a lazy-loaded module, you only need\nto import SkyhookDndModule there. That way the backend and global drag state is only\ninitialized once. But you may use forRootto inject a new instance or to\ninclude drag and drop on only some child modules.\nWhen installing backends originally made for React (they all use default\nexports), make sure you use this syntax:\nimport { default as XXX } from '...'\n... because Angular in AOT mode cannot do import XXX from '...'\ndirectly.\nConcepts\nThese pieces make up the library:\n\nAn item (JS Object, not a DOM node) is the source of truth for each drag\noperation\nA drag source registers a DOM node to commence drag operations\nA drop target registers a DOM node for hover and drop events\nwhile dragging\nA way for each to provide, listen for and query changes in the drag state:\na monitor and appropriate callbacks\nHooks to provide some other DOM element as the drag preview.\n\nreact-dnd defined one more thing, inspired by HTML5, to make using this sane:\neach item has a type, and drag sources and drop targets will\nrespectively emit and accept only items with matching types.\nThat's it. This library offers all those concepts in an Angular-friendly way,\nthat is also largely compatible with a lot of react-dnd code and examples.\nNext steps\n\nHave a look at the Examples, and browse their source code in the\nexamples app on GitHub.\n\nRead and follow the Tutorial\n\nRead the 3-part guide in the sidebar. Any specifics are available by browsing the interfaces and\nclasses.\n\n\nTouch support and alternate backends\nMobile devices have not implemented HTML5 drag and drop. You will need:\n\nA different backend using click or touch events, without dropping desktop support\nA way to render drag previews. Where on desktops you\ncan let the browser render drag previews, when using a backend based on click\nor touch events, on mobile you have to render them yourself.\n\nA good way to solve both problems at once is using\n@angular-skyhook/multi-backend. It is based on the original\ndnd-multi-backend, which was designed to seamlessly switch\nbetween an HTML5 and a touch backend when it noticed different\nkinds of interaction. The @angular-skyhook version includes a preview component.\nNote also that you will need to use an exported function\nto provide the backend, to retain AOT compatibility, if it requires assembly.\nMultiBackend, for example, can be used like so:\nexport function createBackend() {\n    return MultiBackend(HTML5ToTouch);\n}\n@NgModule({\n  imports: [\n    SkyhookDndModule.forRoot({ backendFactory: createBackend })\n  ]\n}\n// ...Troubleshooting\nI get TypeError: backend is null, only when AOT is enabled\nAlso rears its head as No such property 'default' of undefined.\nTroubleshooting steps\n\nCheck you are importing the backend and renaming any default exports.\nimport { default as HTML5Backend } from 'react-dnd-html5-backend';\nimport { SomeImaginaryBackendWithNamedExports } from 'some-imaginary-backend';Generally, make sure you are importing the backend correctly. If it does not\nprovide Typescript definitions, you might have to read the documentation or\nbrowse the source code.\n\nMake sure in your root Angular module (usually app.module.ts) you import\nSkyhookDndModule.forRoot({ backend: MyBackend }) instead of plain SkyhookDndModule.\n\n\nI get Error encountered resolving symbol values statically. Calling function 'default' with AOT enabled.\nMake sure you are following the special instructions for assembly-required backends\nlike MultiBackend or any backend that allows SomeBackend({ optionsHere: true }),\nlike TouchBackend. See above.\nIn the spec callbacks, my component doesn't have any properties, and it can't call this.method()!\nMake sure you use the arrow function syntax (() =>) in your specs so this will refer to your component. Example:\npaperCount = 3;\nlimitedSupplyOfPaper = this.dnd.dragSource(\"PAPER\", {\n    // use shorthand for one-liners that return a value\n    canDrag: () => this.paperCount > 0,\n    endDrag: (monitor) => {\n        if (monitor.didDrop()) {\n            this.paperCount--;\n        }\n    }\n});This demo shows comprehensively what this refers to\nin arrow functions vs regular ones. A sufficiently advanced editor shouldn't\nshow any completions at this.| in a regular function, as it will resolve the\ntype of this to be any.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide.html":{"url":"additional-documentation/guide.html","title":"additional-page - Guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhen using @angular-skyhook, you follow this general pattern:\n\nCreate a connection and specify its behaviour: Creating Connections\nUse directives or methods to connect it to real DOM elements:\nConnecting to DOM\nUse the connection's listen method to listen for relevant state changes, and respond to them:\nMonitoring State\nRemember to destroy the connection in ngOnDestroy(). Refer to part 1\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/1.-creating-connections.html":{"url":"additional-documentation/guide/1.-creating-connections.html","title":"additional-page - 1. Creating connections","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreating connections\nThere are three types of connection.\n\nDragSource\nis for allowing components to be dragged. Create one with\nSkyhookDndService#dragSource\nusing a\nDragSourceSpec\nand attach it to the DOM\nwith [dragSource]=\"...\".\n\nDropTarget\nis for allowing components to be dragged. Create one with\nSkyhookDndService#dropTarget\nusing a\nDropTargetSpec\nand attach it to the DOM\nwith [dropTarget]=\"...\".\n\nDragLayer\nis an advanced feature that allows you to implement your own\ncustom drag previews. Create one with\nSkyhookDndService#dragLayer,\nbut you don't attach them to the DOM, you simply listen for changes.\n\n\nAll three of them have the same lifecycle, and all three of them offer a\n.listen() function, which allows you to listen to changes. See\nConnectionBase for what they have in\ncommon.\nUsing the SkyhookDndService to create connections\nFirst, inject \nSkyhookDndService,\n into your component.\nconstructor(private dnd: SkyhookDndService) { ... }Then, use one of the methods\nSkyhookDndService#dragSource,\nSkyhookDndService#dropTarget\nto create one and store it as an instance variable, and make sure to tear down\nthe connection in ngOnDestroy.\nsource = this.dnd.dragSource(\"CAT\", {\n  beginDrag: (monitor) => ({ id: this.cat.id })\n  // ...\n});\n// or\ntarget = this.dnd.dropTarget([\"CAT\", \"ZEBRA\"], {\n  // ...\n});\nconstructor(private dnd: SkyhookDndService) { ... }\n\nngOnDestroy() {\n  this.source.unsubscribe();\n  // or\n  this.target.unsubscribe();\n}Then, you will want to add some behaviour beyond the default by looking into the\nSpec input for your connection type.\nDestroying Connections\nAll three types of connection need to be destroyed when your component is\ndestroyed. If you don't, you will have strange problems.\nThe easy way is to call\n.unsubscribe() on the\nconnection object in ngOnDestroy.\nngOnDestroy() {\n    this.source.unsubscribe();\n    this.target.unsubscribe();\n    this.layer.unsubscribe();\n    // neat. we're done.\n}\nBut I have ten other subscriptions!\nIn situations where your component has a lot of subscription logic to\nmaintain, there are more powerful ways of unsubscribing to many things at once.\nYou can create an RxJS Subscription object in your component, and call\nSubscription.add(conn) with your connection. There is a convenience parameter\non each of the SkyhookDndService methods which will do this for you.\nimport { Subscription } from 'rxjs';\n\n// ...\n\nsubs = new Subscription();\n\nsource = this.dnd.dragSource({\n  // ...\n}, this.subs);\n\ntarget = this.dnd.dragSource({\n  // ...\n}, this.subs);\n\n// ...\n\nngOnInit() {\n    // subscribe to lots of things here\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n}\nngOnDestroy() {\n  // This will unsubscribe everything, including source and target\n  this.subs.unsubscribe();\n}(It is not recommended to have a large number of drag sources and drop targets\nattached to a single component, especially not in a variably-sized array,\nsimply because that is poor component structure. Instead, consider creating a\ncomponent that handles a single piece of dragging logic, and use an *ngFor over\nthe whole component.)\nNext: Connecting to DOM.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/2.-connecting-to-dom.html":{"url":"additional-documentation/guide/2.-connecting-to-dom.html","title":"additional-page - 2. Connecting to DOM","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConnecting sources and targets to real DOM elements\nOnce you have created a connection, it is most useful when connected to a real\nDOM element.\nMaking a DOM element draggable\nThis means that events fired inside the element's bounding rectangle will start\na drag. Use DragSourceDirective to do this. It's as simple as:\n\n  drag me\nsource = this.dnd.dragSource(\"DRAGME\", {\n  beginDrag: () => ({ name: 'Jones McFly' }),\n  // other DragSourceSpec methods\n});\n// constructor, unsubscribe, etcThen, investigate using\nDragSourceSpec\nto customise the behaviour.\nMaking a DOM element into a drop target\nThis means your element will react to items being hovered or dropped within its\nbounding rectangle.\n\n  drop on me\ntarget = this.dnd.dropTarget(\"DRAGME\", {\n    drop: monitor => {\n        console.log('dropped an item:', monitor.getItem()); // => { name: 'Jones McFly' }\n    }\n})\n// constructor, unsubscribe, etcThen, investigate using\nDropTargetSpec\nto customise the behaviour.\nDrag previews\nThis is a feature unique to the HTML5 backend. If you are using another\nbackend, you will need a Drag Layer (see below) to render anything that follows\nthe mouse.\nBy default, a static screenshot of the original [dragSource] element will form\na drag preview and follow the mouse around.\nUsing a different element as the preview source\nIf you want another element to be the source of the preview, you can use the\n[dragPreview]=\"source\" directive.\nIf you place a DragPreviewDirective on a different element than the\n[dragSource], and pass the same DragSource connection to it, the\npreview element will take over the job of posing for the preview screenshot.\nUsing a 'drag handle'\nThis is a common use of custom drag previews, where a box with a smaller handle\nwithin it is only draggable from the handle. This is useful for moving\ninteractive blocks of UI (e.g.  elements) around the screen, without\ntouching the inputs / selecting text / making unwanted changes.\n\nAttach [dragSource]=\"source\" to the handle.\nAttach [dragPreview]=\"source\" to the overall box being dragged.\nAs always, you may consider applying CSS cursor: move or cursor: grab or\nsimilar to the handle, to make sure users can discover what the handle is\nfor.\n\nUsing an image preview\n\nCreate an image element with const img = new Image(); img.src = \"...\";\nUse img.onload = () => { ... } to wait for it to load. Inside the onload\ncallback, run someDragSourceConnection.connectDragPreview(img).\n\nSee DragSource.connectDragPreview and DragPreviewOptions for options.\nNext: Monitoring State.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/3.-monitoring-state.html":{"url":"additional-documentation/guide/3.-monitoring-state.html","title":"additional-page - 3. Monitoring State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMonitoring State\nHow to change your template depending on the drag state\n\nTake any connection object, like DropTarget\nCall .listen() with a function that returns what information you want to\nmonitor\nSave the resulting Observable to an instance variable in your component\nUse the observable via the | async pipe to render alternate content in\nyour template.\n\nFor example:\n\n    drop cats here\n.cat-target { background: #eee; }\n.cat-target--hovering { background: lightgoldenrodyellow; }target = this.dnd.dropTarget(\"CAT\", {\n    drop: monitor => {\n        console.log('dropped a cat');\n    }\n});\n\n// this is a very useful combination on a drop target,\n// which expresses 'hovering over' + ('same type' + 'DropTargetSpec.canDrop returned true')\n// you almost always want to use the combination rather than isOver on its own\nhovering$ = this.target.listen(m => m.isOver() && m.canDrop());What can you listen to?\nEach type of connection gets a different set of information available on the\nmonitor. They are laid out in these interfaces:\n\nDragSourceMonitor\nDropTargetMonitor\nDragLayerMonitor\nAll three derive from MonitorBase\n\nOptimisation\nNote that all three monitors have very rapidly-changing information available on\nthem, such as the current viewport-mouse offset. The .listen() functions will\noptimise component updates for you. You don't want to:\n\nSubscribe to more properties than you need. This hinders performance.\nSubscribe to the entire monitor object. It will only fire once, and then\nnever again, because the monitor object itself is the same each time.\n\nThe implementation of listen() includes an implementation of RxJS'\ndistinctUntilChanged that also optimises for JS Objects with the same keys\nbut different values. The following two examples fire exactly as often:\nisDraggingPlain$ = this.source.listen(m => m.isDragging());\nisDraggingObj$   = this.source.listen(m => ({ isDragging: m.isDragging() }));This is helpful if you have a lot of properties to listen to and wish to\nreduce the number of | async pipes in your code, or if you want to copy\nsome react-dnd code.\nMaking decisions in the Spec based on current drag state\nThe other place you get access to a monitor is in the callbacks in each Spec.\nMonitors carry some information only relevant and usable inside these callbacks.\nThose methods are documented in the monitor interfaces, and particularly useful\nmethods are highlighted in each of the Spec callbacks, such as\nDropTargetSpec.drop.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/chess-tutorial.html":{"url":"additional-documentation/chess-tutorial.html","title":"additional-page - Chess Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChess Tutorial\nIn this tutorial, we're building a tiny chess game, with one knight on the\nboard. It's an Angular-specific translation of the original react-dnd\ntutorial. The discussion about how to break down this game into\ncomponents is worth reading the original for. We will carry on implementing the\nthree components:\n\nKnightComponent, responsible for rendering one knight piece\nSquareComponent, just one black or white square on the board\nBoardComponent, 64 squares.\n\nThis tutorial assumes you are familiar with the basics of Angular (version 2+).\nIt also assumes you have read the Quickstart guide, and have attached the\nSkyhookDndModule and the HTML5 backend. Complete source code is available on\nGitHub, in four commits: one, two,\nthree, four, the last of which is the finished\nproduct. You can play with a live demo.\nBasic chess visuals\nWe'll build the KnightComponent first. It is very simple, just a span with a Unicode\nknight character in it.\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-knight',\n    template: `♘`,\n    styles: [`\n    span {\n        font-weight: 400;\n        font-size: 54px;\n        line-height: 70px;\n    }\n    `]\n})\nexport class KnightComponent {\n}Add this component to your module's declarations section, and put\n somewhere on your page.\n\nNext, we will implement SquareComponent. It is responsible only for changing the colour\nof the background and foreground depending on a black input, and rendering\nwhatever was passed to it inside its tags. Make a SquareComponent, add it to\nyour module, and include the following very simple HTML template:\n\n  \nIn the body of the component class, add an input for whether the square should\nbe black or not:\n@Input() black: boolean;Then implement getStyle() by reading this property.\ngetStyle() {\n    return this.black\n        ? { backgroundColor: 'black', color: 'white' }\n        : { backgroundColor: 'white', color: 'black' }\n}Note that by attaching these styles directly via [ngStyle], they are not\naffected by Angular's view encapsulation, so color will apply to any child\ncomponents as well. You could achieve the same by using classes and CSS and\n::ng-deep or turning view encapsulation off, but [ngStyle] is good enough\nfor us.\nThen, we want SquareComponent to take up all the space available to it. This\nway, Square can be arbitrarily large, and we don't have to be concerned with how\nbig the whole board is going to be. Include the following in a styles block,\nor a linked CSS file.\n:host, div {\n    display: block;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n}At this point, you can render one square with a knight in it, like so:\n\n    \n\nIf you're paying attention, you'll notice that height: 100% doesn't really\nmean anything as none of the parent divs have a height to be 100% of, but it\nwill make sense later when we put the Square in a div that has an absolute\nheight.\nThen, let's build the board. Start by building out a component that just renders\none square.\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-board',\n    template: `\n    \n        \n            \n        \n    \n    `\n})\nexport class BoardComponent {\n}Now, we need to render 64 of them. We will need an *ngFor, but Angular isn't\nvery good at for loops, so we have to make an array of 64 items.\n\n    \n        \n    \n// ...\nexport class BoardComponent {\n    sixtyFour = new Array(64).fill(0).map((_, i) => i);\n}\nThen, you just have a lot of black squares in a vertical list. Not very chess-y.\nTo make it an 8x8 grid, we are going to wrap them all in a , and use the cool new CSS feature, CSS Grid. Make sure you are\nusing a modern browser. Apply this style to the wrapping .board:\n.board {\n    width: 100%;\n    height: 100%;\n    border: 1px solid black;\n    display: grid;\n    grid-template-columns: repeat(8, 12.5%);\n    grid-template-rows: repeat(8, 12.5%);\n}For brevity's sake you could just set .board to a fixed width and height\nof 560px. I added a ContainerComponent, just to specify that size, to keep\nthe board independent of where it will be placed. At this point, you will have\nan 8x8 board, but it still doesn't quite look like chess.\n\nMaking the chessboard pattern and placing one knight on the board\nWe're going to need a way to express coordinates on the board. Define a new\ninterface, to hold x and y coordinates.\nexport interface Coord {\n  x: number;\n  y: number;\n}Save it in a new file, coord.ts, and import it into your Board component file.\nThen, we need to convert [0..63] (the indices of the *ngFor) to Coord\nobjects.\nexport class Board {\n    // ...\n    xy(i): Coord {\n      return {\n          x: i % 8,\n          y: Math.floor(i / 8)\n      }\n    }\n}\nYou can then quite easily go from Coord to whether the square is black or not:\n    // ...\n    isBlack({ x, y }: Coord) {\n        return (x + y) % 2 === 1;\n    }Then, pass the result to each SquareComponent, and render only one KnightComponent in the top\nleft:\n\n    \n        \n    \nAnd look at that, we have a chess board with one knight.\n\nMaking the knight move around\n\nAt this point, your code should look like this commit. You can\nstart fresh from there if you want.\n\nWe can clearly represent the position of a knight in one Coord object. You\ncould store this on the BoardComponent itself:\n\nknightPosition: Coord = { x: 2, y: 5 };But we're going to want to read this elsewhere and drive the game logic from it,\nand we don't want all the game logic to be trapped inside the BoardComponent.\nSo, create a GameService, and represent the changing position of the knight\nwith an RxJS BehaviorSubject. This is an ultra-lightweight way of\nbuilding an @ngrx-style Store without any boilerplate. It allows us to\n'broadcast' updates to the knight's position to any interested components.\nLike any Subject, BehaviourSubject can be used as an Observable, and\ncomponents can subscribe to it with the | async pipe. But unlike a regular\nSubject, it can also have an initial value, and will replay the most recent\nvalue to any new subscribers. This is exactly what we want.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Coord } from './coord';\n\n@Injectable()\nexport class GameService {\n\n    knightPosition$ = new BehaviorSubject({ x: 2, y: 5 });\n\n    moveKnight(to: Coord) {\n        this.knightPosition$.next(to);\n    }\n\n}As you can see, this is a very simple service. Inject it into your\nBoardComponent, and let's put the Knight where the GameService\nsays it should go.\n\nknightPosition$ = this.game.knightPosition$;\nconstructor(private game: GameService) { }This works, but it's very hard to read. A better solution would be to put the\nentire *ngFor section in the scope of one subscription. You can do that\nwithout introducing a redundant , by using  and a fancy\ntrick: since knightPosition$|async is always truthy, you can put it in an\n*ngIf and give the result a name using the *ngIf=\"AAA as BBB\" syntax. Here's\nthe entire template:\n    \n        \n            \n                \n                    \n                    \n                \n            \n        \n    The resulting template is much clearer.\nNow that we have a knightPosition$ and even a GameService.moveKnight()\nfunction, we can hook up a click event on each  to move the knight\naround the board. We're going to remove it later, so just throw it in the\nBoardComponent:\nhandleSquareClick(pos: Coord) {\n    this.game.moveKnight(pos);\n}Click around, and your noble KnightComponent will follow, even though he is breaking\nthe rules. So, let's add the rules. Amend the GameService to include\na canMoveKnight function, based on the current position and a prospective\nposition. You can store the currentPosition by subscribing internally to\nknightPosition$ and writing out each new value into an instance variable.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Coord } from './coord';\n\n@Injectable()\nexport class GameService {\n\n    knightPosition$ = new BehaviorSubject({ x: 2, y: 5 });\n    currentPosition: Coord;\n\n    constructor() {\n        this.knightPosition$.subscribe(kp => {\n            this.currentPosition = kp;\n        })\n    }\n\n    moveKnight(to: Coord) {\n        this.knightPosition$.next(to);\n    }\n\n    canMoveKnight(to: Coord) {\n        const { x, y } = this.currentPosition;\n        const dx = to.x - x;\n        const dy = to.y - y;\n\n        return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n               (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n    }\n\n}Amend handleSquareClick to check the rules before executing the move:\nhandleSquareClick(pos: Coord) {\n    if (this.game.canMoveKnight(pos)) {\n        this.game.moveKnight(pos);\n    }\n}And voilà, your knight won't execute an illegal move. We will be replacing this\nclick handler in just a moment, but we have separated the game logic out, so we\ncan reuse those two functions.\nImplementing drag and drop\n\nAt this point, your code should be look like this commit.\n\nTake a moment to think about what we have to work with. We have:\n\nA KnightComponent which we want to be able to drag,\nMany SquareComponents on which he could be dropped,\nA way to express that state change (GameService.moveKnight),\nAnd a way to compute where we can drop him (GameService.canMoveKnight).\n\nOur strategy for implementing drag and drop is this:\n\nMake the knight draggable\nTurn all the squares into drop targets\nOnly allow drops into squares where canMoveKnight returns true\nOn each successful drop, call moveKnight, and Angular will re-render with\nthe new state.\nAdd some extra visuals to guide the interaction\n\nIf you have used other drag and drop libraries, this may seem a bit weird --\nwhat happens to the Knight that we're dragging after we drop him? The answer is,\nhe disappears. After step 1, we will have a knight you can pick up, but nothing\ninteresting will happen when we let go, except that the preview will vanish. We\nare going to do steps 3 and 4 on the drop targets, which are notified when you\ndrop something on them.\nPart 1. Make the knight draggable\nFirst, we need a type to describe what we're dragging, so that the squares can\nlisten for knights floating above them. Store a constant string \"KNIGHT\" in\na new file. This is better than typing the same string over and over, and serves\nas a single place where all your different chess piece types are defined.\n// constants.ts\nexport const ItemTypes = {\n    KNIGHT: \"KNIGHT\"\n}Then, make your KnightComponent into a drag source.\n\nInject SkyhookDndService into your KnightComponent\nCreate a dead simple drag source which emits ItemTypes.KNIGHT, and a simple\n{} to represent what's being dragged. We don't need any more information\nthan that, but if you were doing >1 piece, you would have to specify which\nknight was being dragged. This is where you'd do it.\nAttach the drag source to the Knight's DOM element.\nIn ngOnDestroy, unsubscribe the drag source.\n\nHere's all four in one go:\nimport { Component } from '@angular/core';\nimport { SkyhookDndService } from \"@angular-skyhook/core\";\nimport { ItemTypes } from './constants';\n\n@Component({\n    selector: 'app-knight',\n                     // step 3\n    template: `♘`,\n    styles: [`\n    span {\n        font-weight: 700;\n        font-size: 54px;\n    }\n    `]\n})\nexport class KnightComponent {\n    // step 2\n    knightSource = this.dnd.dragSource(ItemTypes.KNIGHT, {\n        beginDrag: () => ({})\n    });\n\n    // step 1\n    constructor(private dnd: SkyhookDndService) { }\n\n    // step 4\n    ngOnDestroy() {\n        this.knightSource.unsubscribe();\n    }\n}Try dragging your little knight, and you'll find that you can. But the\ninteraction is slightly confusing - you can't tell at a glance that the knight\nis conceptually in-flight, it just looks like there are two knights. So let's\nlisten to whether we are dragging the knight, and make the stationary one look\ndifferent while we are.\n\nUse the DragSource.listen and DragSourceMonitor.isDragging methods to\nget an observable isDragging$ on your KnightComponent.\nUse that observable in your template to change styles\n\n// component\n// (this is an Observable)\nisDragging$ = this.knightSource.listen(monitor => monitor.isDragging());\n♘/* in the style block */\n.dragging {\n    opacity: 0.25;\n}Now, the knight on the board will be a bit transparent when you've picked it up.\nYou could set it to opacity: 0, but in chess, players like to know where the\npiece came from. @angular-skyhook makes no assumptions about how to render\nany elements, so you can always customise their appearance at any stage of the\ndrag and drop process.\nPart 2: Make the squares into drop targets\nBecause canMoveKnight has to be computed once per square, each square is going\nto have to know where it is on the board. However, the SquareComponent is\nperfectly good at what it does. We don't want to ruin a good thing. Let's wrap\nit with another component, BoardSquareComponent, that will handle the drag and drop,\nand leave the black and white rendering to SquareComponent. This is a basic wrapper\nwhich preserves the size of the underlying squares:\nimport { Component, Input  } from \"@angular/core\";\n\n@Component({\n    selector: 'app-board-square',\n    template: `\n    \n        \n            \n        \n    \n    `, styles: [`\n    :host, .wrapper {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n    `]\n})\nexport class BoardSquareComponent {\n    @Input() position: Coord;\n    get black() {\n         const { x, y } = this.position;\n         return (x + y) % 2 === 1;\n    }\n}Add it to your module, and replace the  in the BoardComponent\ntemplate with this:\n\n    \nThen, we're going to add a drop target to BoardSquareComponent and attach it\nto that wrapper div. It's very similar to the drag source.\n\nInject SkyhookDndService\nCreate a drop target\nAttach it to the DOM\nUnsubscribe it in ngOnDestroy.\n\nimport { Component, Input  } from \"@angular/core\";\nimport { SkyhookDndService } from \"@angular-skyhook/core\";\nimport { ItemTypes } from \"./constants\";\n\n@Component({\n    selector: 'app-board-square',\n    template: `\n                         \n    \n        \n            \n        \n    \n    `, styles: [`\n    :host, .wrapper {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n    `]\n})\nexport class BoardSquareComponent {\n    @Input() position: Coord;\n    get black() {\n         const { x, y } = this.position;\n         return (x + y) % 2 === 1;\n    }\n\n    // step 2\n    target = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n\n    });\n\n    // step 1\n    constructor(private dnd: SkyhookDndService) { }\n\n    // step 4\n    ngOnDestroy() {\n        this.target.unsubscribe();\n    }\n\n}Parts 3 and 4: make the knight move around on drop\nNext up is to incorporate the game logic, and to actually move the knight. We're\ngoing to use two hooks in the drop target: DropTargetSpec.canDrop and\nDropTargetSpec.drop. We have already done the heavy lifting for both in\nGameService. Inject GameService in the constructor, and incorporate its\nmethods.\ntarget = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n    canDrop: monitor => {\n        return this.game.canMoveKnight(this.position);\n    },\n    drop: monitor => {\n        this.game.moveKnight(this.position);\n    }\n});\n\nconstructor(private dnd: SkyhookDndService, private gme: GameService) {}Now you should be able to drag your knight around the board!\nPart 5: Extra visuals\nWe have some guidance already about where you can drop a knight. The mouse\ncursor gets a different icon depending on whether you can or not. But usually,\nthis is not enough of an indicator. Good UI means making difficult things\nobvious and learnable. Someone who has never seen a knight should be able to\nfigure out where one can go.\nIn that spirit, we will change the colour of the squares while dragging,\ndepending on whether they represent a valid move, and colour the square you're\nhovering over either red or green depending on whether dropping would result in\na move.\nThe procedure is almost identical to what we did for the Knight earlier on.\n\nUse the DropTarget.listen, DropTargetMonitor.canDrop and\nDropTargetMonitor.isOver methods to observe changes in drag state\nUse observables in your template to change styles on an overlay div.\n\n// We are assuming RxJS 5.5+ here, but you can use plain Observable.map\nimport { map } from 'rxjs/operators';\n\n// template:    \n        \n            \n        \n        \n    \nexport class BoardSquareComponent {\n    // ...\n    target = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n        // ...\n    });\n\n    collected$ = this.target.listen(m => ({\n        canDrop: m.canDrop(),\n        isOver: m.isOver(),\n    }));\n\n    showOverlay$ = this.collected$.pipe(map(c => c.isOver || c.canDrop));\n\n    overlayStyle$ = this.collected$.pipe(map(coll => {\n        let { canDrop, isOver } = coll;\n        let bg: string = \"rgba(0,0,0,0)\";\n        if (canDrop && isOver) { bg = 'green'; }\n        else if (canDrop && !isOver) { bg = 'yellow'; }\n        else if (!canDrop && isOver) { bg = 'red'; }\n        return {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: '100%',\n            zIndex: 1,\n            opacity: 0.5,\n            backgroundColor: bg\n        }\n    }));\n\n    // ...\n\n}Here's what it looks like:\n\nLastly, we're going to customize the drag preview (that little knight that\nfollows the mouse around). @angular-skyhook has some very powerful ways to\ncustomize this, but we're going to use a simple image. It's quite simple:\n\nCreate an Image\nWait for it to load\nConnect it to the knightSource as a drag preview\n\nWe can do this in just a few lines.\n// ...\nexport class KnightComponent {\n    // ...\n\n    ngOnInit() {\n        const img = new Image();\n        img.src = // ... long 'data:image/png;base64' url\n                  // regular 'https://' URLs work here too\n        img.onload = () => this.knightSource.connectDragPreview(img);\n    }\n}For that long URL, see this file.\nThen we get a funky horse as our preview.\n\nHave a go with the live demo here.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/translating-react-code.html":{"url":"additional-documentation/translating-react-code.html","title":"additional-page - Translating React Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTranslating React Code\nThere are many code examples and libraries on the web written for react-dnd,\nthe most important of which is the actual react-dnd\ndocumentation. In the\ninterest of making them useful or at least understandable, this library presents\na fairly similar API to the original. There are, of course, some differences\nmandated by the style and limitations of React and Angular. We will illustrate\nthis with the react-dnd DragSource compared to @angular-skyhook's\nSkyhookDndService.dragSource(). Here are the original API\ndocs on\nDragSource; the following is a small but complete example for a quick\nreference. If you know how to use react-dnd already, then this should show you\nmost of it. If you don't know react-dnd, this will help you read the example\ncode demos in the react-dnd documentation.\nHere's a basic example in React:\nlet itemSourceSpec = {\n  beginDrag: (props, monitor) => {\n    return { someProperty: props.someProperty };\n  },\n  endDrag: (props, monitor, component) => {\n    if (monitor.didDrop()) {\n      component.fireAction(monitor.getItem());\n    }\n  }\n}\n@DragSource(\"ITEM\", itemSourceSpec, (connect, monitor) => ({\n  connectDragSource: connect.connectDragSource(),\n  isDragging: monitor.isDragging(),\n}))\nexport class MyComponent extends React.Component {\n  fireAction() { /* ... */ }\n  render() {\n    const { someProperty, isDragging } = this.props;\n    return connectDragSource(\n      \n        {someProperty}\n        {isDragging ? 'I am being dragged now' : null}\n      \n    );\n  }\n}And here's the Angular translation:\n@Component({\n  template: `  \n    {{someProperty}}\n    \n      I am being dragged now\n    \n  \n  `})\nexport class MyComponent {\n  @Input() someProperty: string;\n  itemSource = dnd.dragSource(\"ITEM\", {\n    beginDrag: (monitor) => {\n      return { someProperty: this.someProperty };\n    },\n    endDrag: (monitor) => {\n      if (monitor.didDrop()) {\n        this.fireAction(monitor.getItem());\n      }\n    }\n  });\n  collected$ = this.itemSource.listen(monitor => ({\n    isDragging: monitor.isDragging(),\n  }));\n  constructor(private dnd: SkyhookDndService) {}\n  fireAction(item) { /* ... */ }\n  ngOnDestroy() { this.itemSource.destroy(); }\n}As you can see, the two are very similar. You should be able to take most\nReact/react-dnd examples and translate them quite directly into Angular. You\ncan almost copy and paste some parts.\n1. Biggest difference: Connections instead of Higher-Order Components\nThere is a React concept of 'props', similar to Input() in Angular. The\nprimary difference relevant to us is that in React you can create a 'wrapper' or\n'higher-order' component that will pass all of its props to the one it is\n'wrapping' or 'decorating', with extra behaviour or new props added. This is how\nreact-dnd works: wrap your component with @DragSource(type, spec, collect:\n(connect, monitor) => Object), and the output of the  collect function is\ninjected into your component's props.\nIn Angular, we run everything inside your component, using methods on an\ninjected SkyhookDndService to create connections. Connections are a go-between\nfor subscribing to the global drag state and can be connected to DOM\nelements. This difference is typical of the React Way and the Angular Way. You\ncan create more than one connection for a component, to accomplish the same\nthing as composing multiple decorators in react-dnd.\nThere are five other ways this approach makes for slightly different-looking but\nvery similar-functioning code.\n2. You must destroy the connection object when you are done with it.\nIn React, this is managed by the wrapper component. In Angular, you have to do\nit yourself. See ConnectionBase.unsubscribe.\n3. No props or component arguments in the spec callbacks\nThere are no props in Angular, as discussed above. Instead, all inputs to a component\nor properties relevant to the template are declared on the component class.\nTherefore, using this is appropriate instead. That also makes component\nmoot, since it would also refer to this. Therefore, all of the callbacks on the\ntwo *Spec interfaces have only monitor as an argument.\nOne thing to be aware of is that to access this in an function you pass\nelsewhere, you must use Arrow notation: (arrow) => this.notation; for your\nspec callbacks.\n4. Information about current drag state comes through an Observable\nIn react-dnd the collect((props, monitor) => {}) function supplies the\ncomponent props 'from above'. In Angular (here, DragSource.listen), the\nlibrary gives you an Observable you can subscribe to in your template. The\nexample above creates an Object { ... } and subscribes to it all in one go\n(the internals make this efficient), but you are free to do listen(m =>\nm.isDragging()), with one subscription for each interesting value. You might\ncombine information from two different connections using\nObservable.combineLatest, for example.\nI found the terms connect and collect far too similar and confusing, so\nI renamed collect to listen.\n5. connectDragSource() (etc.) functions vs Angular directives\nIn the example above, connect.connectDragSource() returns a function that will\nlink up a particular part of the JSX template's DOM to the wrapper component. To\naccomplish the same thing in Angular we must connect some DOM from the template\nto a Connection object. The Angular Way to do this is with a directive,\nwhich connects to the DOM via its injected ElementRef. The Angular translation\nabove uses [dragSource]=\"itemSource\" on the same part of the template as the\nReact code does.\nSome React examples will have two different drag sources + associated connectors\n(on different DOM elements), or one source and one connectDragPreview. Angular\ncan do both patterns with directives, because each directive is linked to one Connection.\n6. Can't supply a dynamic type via a (props) => props.type callback, use setType instead\nImagine you want to make a component draggable based on type(s) specified on the\ncomponent inputs.\nreact-dnd allows strings and ES6 Symbols in the type argument. But you can\nalso pass a function  of (props) => string|symbol; in this way, your item\ntypes can depend on the inputs to your component, and even change over time when\nthe props change. It's not a plain asynchronous callback like the rest of the\nspec, it is called when the props change on the decorating component, before any\nasynchronous drag operations start. Angular doesn't have a way for arbitrary\nobjects to listen to ngOnChanges(), so we have to do it manually.\nYou can supply a default type, or null, and update it in later as the\n@Input() property is populated. If you supply null, @angular-skyhook will\ndefer connecting the DOM and the subscription to the monitor until this is\ndone. See DragSource.setType for more information.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
